2016-12-23 13:55:40,208 INFO [com.alibaba.dubbo.common.logger.LoggerFactory] - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2016-12-23 13:55:40,277 INFO [com.alibaba.dubbo.container.Main] -  [DUBBO] Use container type([spring]) to run dubbo serivce., dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 13:55:41,070 DEBUG [org.mybatis.spring.mapper.ClassPathMapperScanner] - Identified candidate component class: file [D:\mywork\test-provider\target\classes\com\jing\mapper\UserMapper.class]
2016-12-23 13:55:41,070 DEBUG [org.mybatis.spring.mapper.ClassPathMapperScanner] - Creating MapperFactoryBean with name 'userMapper' and 'com.jing.mapper.UserMapper' mapperInterface
2016-12-23 13:55:41,090 WARN [org.springframework.context.support.ClassPathXmlApplicationContext] - Exception encountered during context initialization - cancelling refresh attempt
org.springframework.beans.factory.BeanInitializationException: Could not load properties; nested exception is java.io.FileNotFoundException: class path resource [config.properties] cannot be opened because it does not exist
	at org.springframework.beans.factory.config.PropertyResourceConfigurer.postProcessBeanFactory(PropertyResourceConfigurer.java:89)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:265)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:162)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:606)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:462)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at com.alibaba.dubbo.container.spring.SpringContainer.start(SpringContainer.java:50)
	at com.alibaba.dubbo.container.Main.main(Main.java:80)
Caused by: java.io.FileNotFoundException: class path resource [config.properties] cannot be opened because it does not exist
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:172)
	at org.springframework.core.io.support.EncodedResource.getInputStream(EncodedResource.java:143)
	at org.springframework.core.io.support.PropertiesLoaderUtils.fillProperties(PropertiesLoaderUtils.java:98)
	at org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:175)
	at org.springframework.core.io.support.PropertiesLoaderSupport.mergeProperties(PropertiesLoaderSupport.java:156)
	at org.springframework.beans.factory.config.PropertyResourceConfigurer.postProcessBeanFactory(PropertyResourceConfigurer.java:80)
	... 8 more
2016-12-23 13:55:41,093 ERROR [com.alibaba.dubbo.container.Main] -  [DUBBO] Could not load properties; nested exception is java.io.FileNotFoundException: class path resource [config.properties] cannot be opened because it does not exist, dubbo version: 2.8.4, current host: 127.0.0.1
org.springframework.beans.factory.BeanInitializationException: Could not load properties; nested exception is java.io.FileNotFoundException: class path resource [config.properties] cannot be opened because it does not exist
	at org.springframework.beans.factory.config.PropertyResourceConfigurer.postProcessBeanFactory(PropertyResourceConfigurer.java:89)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:265)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:162)
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:606)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:462)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:93)
	at com.alibaba.dubbo.container.spring.SpringContainer.start(SpringContainer.java:50)
	at com.alibaba.dubbo.container.Main.main(Main.java:80)
Caused by: java.io.FileNotFoundException: class path resource [config.properties] cannot be opened because it does not exist
	at org.springframework.core.io.ClassPathResource.getInputStream(ClassPathResource.java:172)
	at org.springframework.core.io.support.EncodedResource.getInputStream(EncodedResource.java:143)
	at org.springframework.core.io.support.PropertiesLoaderUtils.fillProperties(PropertiesLoaderUtils.java:98)
	at org.springframework.core.io.support.PropertiesLoaderSupport.loadProperties(PropertiesLoaderSupport.java:175)
	at org.springframework.core.io.support.PropertiesLoaderSupport.mergeProperties(PropertiesLoaderSupport.java:156)
	at org.springframework.beans.factory.config.PropertyResourceConfigurer.postProcessBeanFactory(PropertyResourceConfigurer.java:80)
	... 8 more
2016-12-23 13:58:14,497 INFO [com.alibaba.dubbo.common.logger.LoggerFactory] - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2016-12-23 13:58:14,558 INFO [com.alibaba.dubbo.container.Main] -  [DUBBO] Use container type([spring]) to run dubbo serivce., dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 13:58:15,377 DEBUG [org.mybatis.spring.mapper.ClassPathMapperScanner] - Identified candidate component class: file [D:\mywork\test-provider\target\classes\com\jing\mapper\UserMapper.class]
2016-12-23 13:58:15,377 DEBUG [org.mybatis.spring.mapper.ClassPathMapperScanner] - Creating MapperFactoryBean with name 'userMapper' and 'com.jing.mapper.UserMapper' mapperInterface
2016-12-23 13:58:15,446 DEBUG [org.apache.ibatis.logging.LogFactory] - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2016-12-23 13:58:16,104 INFO [com.alibaba.druid.pool.DruidDataSource] - {dataSource-1} inited
2016-12-23 13:58:16,315 DEBUG [org.mybatis.spring.SqlSessionFactoryBean] - Parsed configuration file: 'class path resource [mybatis-configuration.xml]'
2016-12-23 13:58:16,368 DEBUG [org.mybatis.spring.SqlSessionFactoryBean] - Parsed mapper file: 'file [D:\mywork\test-provider\target\classes\mapping\UserMapper.xml]'
2016-12-23 13:58:16,443 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 13:58:16,592 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 13:58:16,619 INFO [com.alibaba.dubbo.config.AbstractConfig] -  [DUBBO] The service ready on spring started. service: com.jing.service.UserService, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 13:58:16,646 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.remoting.http;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class HttpBinder$Adpative implements com.alibaba.dubbo.remoting.http.HttpBinder {
public com.alibaba.dubbo.remoting.http.HttpServer bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.http.HttpHandler arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", "jetty");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.http.HttpBinder) name from url(" + url.toString() + ") use keys([server])");
com.alibaba.dubbo.remoting.http.HttpBinder extension = (com.alibaba.dubbo.remoting.http.HttpBinder)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.http.HttpBinder.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 13:58:16,707 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 13:58:16,717 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 13:58:16,743 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 13:58:16,754 INFO [com.alibaba.dubbo.config.AbstractConfig] -  [DUBBO] Export dubbo service com.jing.service.UserService to local registry, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 13:58:16,754 INFO [com.alibaba.dubbo.config.AbstractConfig] -  [DUBBO] Export dubbo service com.jing.service.UserService to url rest://192.168.1.184:9002/provider/com.jing.service.UserService?anyhost=true&application=test-provider&default.charset=UTF-8&default.retries=0&dubbo=2.8.4&generic=false&interface=com.jing.service.UserService&methods=getUser,saveUser&optimizer=com.jing.util.SerializationOptimizerImpl&organization=dubbox&owner=programmer&pid=15868&serialization=kryo&server=tomcat&side=provider&timestamp=1482472696654, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 13:58:16,754 INFO [com.alibaba.dubbo.config.AbstractConfig] -  [DUBBO] Register dubbo service com.jing.service.UserService url rest://192.168.1.184:9002/provider/com.jing.service.UserService?anyhost=true&application=test-provider&default.charset=UTF-8&default.retries=0&dubbo=2.8.4&generic=false&interface=com.jing.service.UserService&methods=getUser,saveUser&optimizer=com.jing.util.SerializationOptimizerImpl&organization=dubbox&owner=programmer&pid=15868&serialization=kryo&server=tomcat&side=provider&timestamp=1482472696654 to registry registry://192.168.1.201:2181/com.alibaba.dubbo.registry.RegistryService?application=test-provider&check=false&dubbo=2.8.4&file=false&organization=dubbox&owner=programmer&pid=15868&registry=zookeeper&timestamp=1482472696625, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 13:58:16,757 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 13:58:16,768 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 13:58:17,630 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 13:58:17,656 DEBUG [org.I0Itec.zkclient.ZkConnection] - Creating new ZookKeeper instance to connect to 192.168.1.201:2181.
2016-12-23 13:58:17,656 INFO [org.I0Itec.zkclient.ZkEventThread] - Starting ZkClient event thread.
2016-12-23 13:58:17,664 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:zookeeper.version=3.4.5-1392090, built on 09/30/2012 17:52 GMT
2016-12-23 13:58:17,664 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:host.name=MS-20160726FQSA
2016-12-23 13:58:17,664 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:java.version=1.8.0_77
2016-12-23 13:58:17,664 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:java.vendor=Oracle Corporation
2016-12-23 13:58:17,664 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:java.home=C:\Program Files\Java\jdk1.8.0_77\jre
2016-12-23 13:58:17,665 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:java.class.path=D:\mywork\test-provider\target\classes;D:\mywork\test-common\target\classes;C:\Users\Administrator\.m2\repository\com\cloudhopper\proxool\proxool\0.9.1\proxool-0.9.1.jar;C:\Users\Administrator\.m2\repository\com\cloudhopper\proxool\proxool-cglib\0.9.1\proxool-cglib-0.9.1.jar;C:\Users\Administrator\.m2\repository\avalon-framework\avalon-framework-api\4.3\avalon-framework-api-4.3.jar;C:\Users\Administrator\.m2\repository\avalon-logkit\avalon-logkit\2.1\avalon-logkit-2.1.jar;C:\Users\Administrator\.m2\repository\geronimo-spec\geronimo-spec-javamail\1.3.1-rc3\geronimo-spec-javamail-1.3.1-rc3.jar;C:\Users\Administrator\.m2\repository\geronimo-spec\geronimo-spec-jms\1.1-rc4\geronimo-spec-jms-1.1-rc4.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-core\4.1.5.RELEASE\spring-core-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-webmvc\4.1.5.RELEASE\spring-webmvc-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-beans\4.1.5.RELEASE\spring-beans-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-context\4.1.5.RELEASE\spring-context-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-expression\4.1.5.RELEASE\spring-expression-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-web\4.1.5.RELEASE\spring-web-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-jdbc\4.1.5.RELEASE\spring-jdbc-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-tx\4.1.5.RELEASE\spring-tx-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-orm\4.1.5.RELEASE\spring-orm-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-aop\4.1.5.RELEASE\spring-aop-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-aspects\4.1.5.RELEASE\spring-aspects-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\aspectj\aspectjweaver\1.8.5\aspectjweaver-1.8.5.jar;C:\Users\Administrator\.m2\repository\commons-fileupload\commons-fileupload\1.2.2\commons-fileupload-1.2.2.jar;C:\Users\Administrator\.m2\repository\org\apache\commons\commons-lang3\3.3.1\commons-lang3-3.3.1.jar;C:\Users\Administrator\.m2\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;C:\Users\Administrator\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Administrator\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Administrator\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\Administrator\.m2\repository\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;C:\Users\Administrator\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.11\jackson-mapper-asl-1.9.11.jar;C:\Users\Administrator\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.11\jackson-core-asl-1.9.11.jar;C:\Users\Administrator\.m2\repository\com\alibaba\fastjson\1.1.26\fastjson-1.1.26.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-api\1.7.6\slf4j-api-1.7.6.jar;C:\Users\Administrator\.m2\repository\org\slf4j\jul-to-slf4j\1.7.6\jul-to-slf4j-1.7.6.jar;C:\Users\Administrator\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.6\jcl-over-slf4j-1.7.6.jar;C:\Users\Administrator\.m2\repository\log4j\log4j\1.2.15\log4j-1.2.15.jar;C:\Users\Administrator\.m2\repository\javax\mail\mail\1.4\mail-1.4.jar;C:\Users\Administrator\.m2\repository\mysql\mysql-connector-java\5.1.27\mysql-connector-java-5.1.27.jar;C:\Users\Administrator\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\Administrator\.m2\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;C:\Users\Administrator\.m2\repository\com\alibaba\rocketmq\rocketmq-client\3.2.6\rocketmq-client-3.2.6.jar;C:\Users\Administrator\.m2\repository\com\alibaba\rocketmq\rocketmq-common\3.2.6\rocketmq-common-3.2.6.jar;C:\Users\Administrator\.m2\repository\com\alibaba\rocketmq\rocketmq-remoting\3.2.6\rocketmq-remoting-3.2.6.jar;C:\Users\Administrator\.m2\repository\io\netty\netty-all\4.0.25.Final\netty-all-4.0.25.Final.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpclient-cache\4.3.1\httpclient-cache-4.3.1.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpcore\4.3.1\httpcore-4.3.1.jar;C:\Users\Administrator\.m2\repository\org\apache\zookeeper\zookeeper\3.4.5\zookeeper-3.4.5.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Administrator\.m2\repository\jline\jline\0.9.94\jline-0.9.94.jar;C:\Users\Administrator\.m2\repository\org\jboss\netty\netty\3.2.2.Final\netty-3.2.2.Final.jar;C:\Users\Administrator\.m2\repository\com\101tec\zkclient\0.7\zkclient-0.7.jar;C:\Users\Administrator\.m2\repository\org\apache\curator\curator-recipes\2.4.2\curator-recipes-2.4.2.jar;C:\Users\Administrator\.m2\repository\com\google\guava\guava\14.0.1\guava-14.0.1.jar;C:\Users\Administrator\.m2\repository\redis\clients\jedis\2.7.2\jedis-2.7.2.jar;C:\Users\Administrator\.m2\repository\org\apache\commons\commons-pool2\2.3\commons-pool2-2.3.jar;C:\Users\Administrator\.m2\repository\com\alibaba\dubbo\2.8.4\dubbo-2.8.4.jar;C:\Users\Administrator\.m2\repository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar;C:\Users\Administrator\.m2\repository\org\apache\curator\curator-client\2.5.0\curator-client-2.5.0.jar;C:\Users\Administrator\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.0.11\tomcat-embed-core-8.0.11.jar;C:\Users\Administrator\.m2\repository\org\apache\tomcat\embed\tomcat-embed-logging-juli\8.0.11\tomcat-embed-logging-juli-8.0.11.jar;C:\Users\Administrator\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\Administrator\.m2\repository\org\apache\mina\mina-core\1.1.7\mina-core-1.1.7.jar;C:\Users\Administrator\.m2\repository\org\glassfish\grizzly\grizzly-core\2.1.4\grizzly-core-2.1.4.jar;C:\Users\Administrator\.m2\repository\org\glassfish\grizzly\grizzly-framework\2.1.4\grizzly-framework-2.1.4.jar;C:\Users\Administrator\.m2\repository\org\glassfish\gmbal\gmbal-api-only\3.0.0-b023\gmbal-api-only-3.0.0-b023.jar;C:\Users\Administrator\.m2\repository\org\glassfish\external\management-api\3.0.0-b012\management-api-3.0.0-b012.jar;C:\Users\Administrator\.m2\repository\org\glassfish\grizzly\grizzly-portunif\2.1.4\grizzly-portunif-2.1.4.jar;C:\Users\Administrator\.m2\repository\org\glassfish\grizzly\grizzly-rcm\2.1.4\grizzly-rcm-2.1.4.jar;C:\Users\Administrator\.m2\repository\com\thoughtworks\xstream\xstream\1.4.1\xstream-1.4.1.jar;C:\Users\Administrator\.m2\repository\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;C:\Users\Administrator\.m2\repository\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;C:\Users\Administrator\.m2\repository\org\apache\bsf\bsf-api\3.1\bsf-api-3.1.jar;C:\Users\Administrator\.m2\repository\org\apache\curator\curator-framework\2.5.0\curator-framework-2.5.0.jar;C:\Users\Administrator\.m2\repository\com\googlecode\xmemcached\xmemcached\1.3.6\xmemcached-1.3.6.jar;C:\Users\Administrator\.m2\repository\org\apache\cxf\cxf-rt-frontend-simple\2.6.1\cxf-rt-frontend-simple-2.6.1.jar;C:\Users\Administrator\.m2\repository\org\apache\cxf\cxf-api\2.6.1\cxf-api-2.6.1.jar;C:\Users\Administrator\.m2\repository\org\codehaus\woodstox\woodstox-core-asl\4.1.2\woodstox-core-asl-4.1.2.jar;C:\Users\Administrator\.m2\repository\org\codehaus\woodstox\stax2-api\3.1.1\stax2-api-3.1.1.jar;C:\Users\Administrator\.m2\repository\org\apache\ws\xmlschema\xmlschema-core\2.0.2\xmlschema-core-2.0.2.jar;C:\Users\Administrator\.m2\repository\org\apache\geronimo\specs\geronimo-javamail_1.4_spec\1.7.1\geronimo-javamail_1.4_spec-1.7.1.jar;C:\Users\Administrator\.m2\repository\wsdl4j\wsdl4j\1.6.2\wsdl4j-1.6.2.jar;C:\Users\Administrator\.m2\repository\org\apache\cxf\cxf-rt-core\2.6.1\cxf-rt-core-2.6.1.jar;C:\Users\Administrator\.m2\repository\org\apache\cxf\cxf-rt-bindings-soap\2.6.1\cxf-rt-bindings-soap-2.6.1.jar;C:\Users\Administrator\.m2\repository\org\apache\cxf\cxf-rt-databinding-jaxb\2.6.1\cxf-rt-databinding-jaxb-2.6.1.jar;C:\Users\Administrator\.m2\repository\org\apache\cxf\cxf-rt-transports-http\2.6.1\cxf-rt-transports-http-2.6.1.jar;C:\Users\Administrator\.m2\repository\org\apache\thrift\libthrift\0.8.0\libthrift-0.8.0.jar;C:\Users\Administrator\.m2\repository\commons-lang\commons-lang\2.5\commons-lang-2.5.jar;C:\Users\Administrator\.m2\repository\com\caucho\hessian\4.0.7\hessian-4.0.7.jar;C:\Users\Administrator\.m2\repository\org\mortbay\jetty\jetty\6.1.26\jetty-6.1.26.jar;C:\Users\Administrator\.m2\repository\org\mortbay\jetty\jetty-util\6.1.26\jetty-util-6.1.26.jar;C:\Users\Administrator\.m2\repository\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;C:\Users\Administrator\.m2\repository\org\hibernate\hibernate-validator\4.2.0.Final\hibernate-validator-4.2.0.Final.jar;C:\Users\Administrator\.m2\repository\javax\cache\cache-api\0.4\cache-api-0.4.jar;C:\Users\Administrator\.m2\repository\javax\ws\rs\javax.ws.rs-api\2.0\javax.ws.rs-api-2.0.jar;C:\Users\Administrator\.m2\repository\org\jboss\resteasy\resteasy-jaxrs\3.0.7.Final\resteasy-jaxrs-3.0.7.Final.jar;C:\Users\Administrator\.m2\repository\org\jboss\resteasy\jaxrs-api\3.0.7.Final\jaxrs-api-3.0.7.Final.jar;C:\Users\Administrator\.m2\repository\org\jboss\spec\javax\annotation\jboss-annotations-api_1.1_spec\1.0.1.Final\jboss-annotations-api_1.1_spec-1.0.1.Final.jar;C:\Users\Administrator\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\Administrator\.m2\repository\net\jcip\jcip-annotations\1.0\jcip-annotations-1.0.jar;C:\Users\Administrator\.m2\repository\org\jboss\resteasy\resteasy-client\3.0.7.Final\resteasy-client-3.0.7.Final.jar;C:\Users\Administrator\.m2\repository\org\jboss\resteasy\resteasy-netty\3.0.7.Final\resteasy-netty-3.0.7.Final.jar;C:\Users\Administrator\.m2\repository\org\jboss\resteasy\resteasy-jdk-http\3.0.7.Final\resteasy-jdk-http-3.0.7.Final.jar;C:\Users\Administrator\.m2\repository\org\jboss\resteasy\resteasy-jackson-provider\3.0.7.Final\resteasy-jackson-provider-3.0.7.Final.jar;C:\Users\Administrator\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.12\jackson-jaxrs-1.9.12.jar;C:\Users\Administrator\.m2\repository\org\codehaus\jackson\jackson-xc\1.9.12\jackson-xc-1.9.12.jar;C:\Users\Administrator\.m2\repository\org\jboss\resteasy\resteasy-jaxb-provider\3.0.7.Final\resteasy-jaxb-provider-3.0.7.Final.jar;C:\Users\Administrator\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.7\jaxb-impl-2.2.7.jar;C:\Users\Administrator\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.7\jaxb-core-2.2.7.jar;C:\Users\Administrator\.m2\repository\javax\xml\bind\jaxb-api\2.2.7\jaxb-api-2.2.7.jar;C:\Users\Administrator\.m2\repository\com\sun\istack\istack-commons-runtime\2.16\istack-commons-runtime-2.16.jar;C:\Users\Administrator\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.12\FastInfoset-1.2.12.jar;C:\Users\Administrator\.m2\repository\javax\xml\bind\jsr173_api\1.0\jsr173_api-1.0.jar;C:\Users\Administrator\.m2\repository\com\esotericsoftware\kryo\kryo\2.24.0\kryo-2.24.0.jar;C:\Users\Administrator\.m2\repository\com\esotericsoftware\minlog\minlog\1.2\minlog-1.2.jar;C:\Users\Administrator\.m2\repository\org\objenesis\objenesis\2.1\objenesis-2.1.jar;C:\Users\Administrator\.m2\repository\de\javakaffee\kryo-serializers\0.26\kryo-serializers-0.26.jar;C:\Users\Administrator\.m2\repository\de\ruedigermoeller\fst\1.55\fst-1.55.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar;C:\Users\Administrator\.m2\repository\org\jasig\cas\client\cas-client-core\3.1.12\cas-client-core-3.1.12.jar;C:\Users\Administrator\.m2\repository\com\alibaba\druid\0.2.15\druid-0.2.15.jar;C:\Users\Administrator\.m2\repository\org\mybatis\mybatis\3.2.8\mybatis-3.2.8.jar;C:\Users\Administrator\.m2\repository\org\mybatis\mybatis-spring\1.2.3\mybatis-spring-1.2.3.jar;C:\Users\Administrator\.m2\repository\org\mybatis\generator\mybatis-generator-core\1.3.2\mybatis-generator-core-1.3.2.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.5.3\jackson-databind-2.5.3.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.5.0\jackson-annotations-2.5.0.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.5.3\jackson-core-2.5.3.jar
2016-12-23 13:58:17,666 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:java.library.path=C:\Program Files\Java\jdk1.8.0_77\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_77/bin/server;C:/Program Files/Java/jre1.8.0_77/bin;C:/Program Files/Java/jre1.8.0_77/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\Java\jdk1.7.0_80\bin;D:\Program Files\Java\jdk1.7.0_80\jre\bin;D:\software\mysql-5.5.49-winx64\bin;C:\Program Files\TortoiseSVN\bin;D:\software\apache-maven-3.0.5\bin;C:\Program Files\Git\cmd;D:\software\eclipse;;.
2016-12-23 13:58:17,666 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\
2016-12-23 13:58:17,666 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:java.compiler=<NA>
2016-12-23 13:58:17,666 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:os.name=Windows 7
2016-12-23 13:58:17,666 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:os.arch=amd64
2016-12-23 13:58:17,666 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:os.version=6.1
2016-12-23 13:58:17,666 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:user.name=Administrator
2016-12-23 13:58:17,666 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:user.home=C:\Users\Administrator
2016-12-23 13:58:17,666 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:user.dir=D:\mywork\test-provider
2016-12-23 13:58:17,667 INFO [org.apache.zookeeper.ZooKeeper] - Initiating client connection, connectString=192.168.1.201:2181 sessionTimeout=60000 watcher=org.I0Itec.zkclient.ZkClient@114a85c2
2016-12-23 13:58:17,670 DEBUG [org.apache.zookeeper.ClientCnxn] - zookeeper.disableAutoWatchReset is false
2016-12-23 13:58:17,690 DEBUG [org.I0Itec.zkclient.ZkClient] - Awaiting connection to Zookeeper server
2016-12-23 13:58:17,691 INFO [org.I0Itec.zkclient.ZkClient] - Waiting for keeper state SyncConnected
2016-12-23 13:58:17,757 INFO [org.apache.zookeeper.ClientCnxn] - Opening socket connection to server 192.168.1.201/192.168.1.201:2181. Will not attempt to authenticate using SASL (unknown error)
2016-12-23 13:58:17,758 INFO [org.apache.zookeeper.ClientCnxn] - Socket connection established to 192.168.1.201/192.168.1.201:2181, initiating session
2016-12-23 13:58:17,760 DEBUG [org.apache.zookeeper.ClientCnxn] - Session establishment request sent on 192.168.1.201/192.168.1.201:2181
2016-12-23 13:58:17,784 WARN [org.apache.zookeeper.ClientCnxnSocket] - Connected to an old server; r-o mode will be unavailable
2016-12-23 13:58:17,785 INFO [org.apache.zookeeper.ClientCnxn] - Session establishment complete on server 192.168.1.201/192.168.1.201:2181, sessionid = 0x159256192b2001b, negotiated timeout = 40000
2016-12-23 13:58:17,786 DEBUG [org.I0Itec.zkclient.ZkClient] - Received event: WatchedEvent state:SyncConnected type:None path:null
2016-12-23 13:58:17,786 INFO [org.I0Itec.zkclient.ZkClient] - zookeeper state changed (SyncConnected)
2016-12-23 13:58:17,786 DEBUG [org.I0Itec.zkclient.ZkClient] - Leaving process event
2016-12-23 13:58:17,786 DEBUG [org.I0Itec.zkclient.ZkClient] - State is SyncConnected
2016-12-23 13:58:17,787 INFO [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] -  [DUBBO] Register: rest://192.168.1.184:9002/provider/com.jing.service.UserService?anyhost=true&application=test-provider&default.charset=UTF-8&default.retries=0&dubbo=2.8.4&generic=false&interface=com.jing.service.UserService&methods=getUser,saveUser&optimizer=com.jing.util.SerializationOptimizerImpl&organization=dubbox&owner=programmer&pid=15868&serialization=kryo&server=tomcat&side=provider&timestamp=1482472696654, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 13:58:17,797 DEBUG [org.apache.zookeeper.ClientCnxn] - Reading reply sessionid:0x159256192b2001b, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,1062,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2016-12-23 13:58:17,805 DEBUG [org.apache.zookeeper.ClientCnxn] - Reading reply sessionid:0x159256192b2001b, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,1063,-110  request:: '/dubbo/com.jing.service.UserService,,v{s{31,s{'world,'anyone}}},0  response::  
2016-12-23 13:58:17,808 DEBUG [org.apache.zookeeper.ClientCnxn] - Reading reply sessionid:0x159256192b2001b, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,1064,-110  request:: '/dubbo/com.jing.service.UserService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
2016-12-23 13:58:17,813 DEBUG [org.apache.zookeeper.ClientCnxn] - Reading reply sessionid:0x159256192b2001b, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,1065,0  request:: '/dubbo/com.jing.service.UserService/providers/rest%253A%252F%252F192.168.1.184%253A9002%252Fprovider%252Fcom.jing.service.UserService%253Fanyhost%253Dtrue%2526application%253Dtest-provider%2526default.charset%253DUTF-8%2526default.retries%253D0%2526dubbo%253D2.8.4%2526generic%253Dfalse%2526interface%253Dcom.jing.service.UserService%2526methods%253DgetUser%252CsaveUser%2526optimizer%253Dcom.jing.util.SerializationOptimizerImpl%2526organization%253Ddubbox%2526owner%253Dprogrammer%2526pid%253D15868%2526serialization%253Dkryo%2526server%253Dtomcat%2526side%253Dprovider%2526timestamp%253D1482472696654,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.jing.service.UserService/providers/rest%253A%252F%252F192.168.1.184%253A9002%252Fprovider%252Fcom.jing.service.UserService%253Fanyhost%253Dtrue%2526application%253Dtest-provider%2526default.charset%253DUTF-8%2526default.retries%253D0%2526dubbo%253D2.8.4%2526generic%253Dfalse%2526interface%253Dcom.jing.service.UserService%2526methods%253DgetUser%252CsaveUser%2526optimizer%253Dcom.jing.util.SerializationOptimizerImpl%2526organization%253Ddubbox%2526owner%253Dprogrammer%2526pid%253D15868%2526serialization%253Dkryo%2526server%253Dtomcat%2526side%253Dprovider%2526timestamp%253D1482472696654 
2016-12-23 13:58:17,814 INFO [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] -  [DUBBO] Subscribe: provider://192.168.1.184:9002/provider/com.jing.service.UserService?anyhost=true&application=test-provider&category=configurators&check=false&default.charset=UTF-8&default.retries=0&dubbo=2.8.4&generic=false&interface=com.jing.service.UserService&methods=getUser,saveUser&optimizer=com.jing.util.SerializationOptimizerImpl&organization=dubbox&owner=programmer&pid=15868&serialization=kryo&server=tomcat&side=provider&timestamp=1482472696654, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 13:58:17,828 DEBUG [org.apache.zookeeper.ClientCnxn] - Reading reply sessionid:0x159256192b2001b, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,1066,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2016-12-23 13:58:17,857 DEBUG [org.apache.zookeeper.ClientCnxn] - Reading reply sessionid:0x159256192b2001b, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,1067,-110  request:: '/dubbo/com.jing.service.UserService,,v{s{31,s{'world,'anyone}}},0  response::  
2016-12-23 13:58:17,875 DEBUG [org.apache.zookeeper.ClientCnxn] - Reading reply sessionid:0x159256192b2001b, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,1068,-110  request:: '/dubbo/com.jing.service.UserService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
2016-12-23 13:58:17,888 DEBUG [org.apache.zookeeper.ClientCnxn] - Reading reply sessionid:0x159256192b2001b, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,1068,0  request:: '/dubbo/com.jing.service.UserService/configurators,T  response:: s{163,163,1482140982240,1482140982240,0,2,0,0,0,0,518} 
2016-12-23 13:58:17,896 DEBUG [org.apache.zookeeper.ClientCnxn] - Reading reply sessionid:0x159256192b2001b, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,1068,0  request:: '/dubbo/com.jing.service.UserService/configurators,T  response:: v{} 
2016-12-23 13:58:17,897 INFO [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] -  [DUBBO] Notify urls for subscribe url provider://192.168.1.184:9002/provider/com.jing.service.UserService?anyhost=true&application=test-provider&category=configurators&check=false&default.charset=UTF-8&default.retries=0&dubbo=2.8.4&generic=false&interface=com.jing.service.UserService&methods=getUser,saveUser&optimizer=com.jing.util.SerializationOptimizerImpl&organization=dubbox&owner=programmer&pid=15868&serialization=kryo&server=tomcat&side=provider&timestamp=1482472696654, urls: [empty://192.168.1.184:9002/provider/com.jing.service.UserService?anyhost=true&application=test-provider&category=configurators&check=false&default.charset=UTF-8&default.retries=0&dubbo=2.8.4&generic=false&interface=com.jing.service.UserService&methods=getUser,saveUser&optimizer=com.jing.util.SerializationOptimizerImpl&organization=dubbox&owner=programmer&pid=15868&serialization=kryo&server=tomcat&side=provider&timestamp=1482472696654], dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 13:58:17,902 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 13:58:17,911 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 13:58:17,922 INFO [com.alibaba.dubbo.container.Main] -  [DUBBO] Dubbo SpringContainer started!, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 13:58:31,227 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001b after 1ms
2016-12-23 13:59:22,522 INFO [com.alibaba.dubbo.common.logger.LoggerFactory] - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2016-12-23 13:59:22,581 INFO [com.alibaba.dubbo.container.Main] -  [DUBBO] Use container type([spring]) to run dubbo serivce., dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 13:59:22,738 INFO [com.alibaba.dubbo.container.Main] -  [DUBBO] Dubbo SpringContainer started!, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:00:47,868 INFO [com.alibaba.dubbo.common.logger.LoggerFactory] - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2016-12-23 14:00:47,931 INFO [com.alibaba.dubbo.container.Main] -  [DUBBO] Use container type([spring]) to run dubbo serivce., dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:00:48,726 DEBUG [org.mybatis.spring.mapper.ClassPathMapperScanner] - Identified candidate component class: file [D:\mywork\test-provider\target\classes\com\jing\mapper\UserMapper.class]
2016-12-23 14:00:48,726 DEBUG [org.mybatis.spring.mapper.ClassPathMapperScanner] - Creating MapperFactoryBean with name 'userMapper' and 'com.jing.mapper.UserMapper' mapperInterface
2016-12-23 14:00:48,792 DEBUG [org.apache.ibatis.logging.LogFactory] - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2016-12-23 14:00:49,341 INFO [com.alibaba.druid.pool.DruidDataSource] - {dataSource-1} inited
2016-12-23 14:00:49,449 DEBUG [org.mybatis.spring.SqlSessionFactoryBean] - Parsed configuration file: 'class path resource [mybatis-configuration.xml]'
2016-12-23 14:00:49,503 DEBUG [org.mybatis.spring.SqlSessionFactoryBean] - Parsed mapper file: 'file [D:\mywork\test-provider\target\classes\mapping\UserMapper.xml]'
2016-12-23 14:00:49,590 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:00:49,734 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:00:49,763 INFO [com.alibaba.dubbo.config.AbstractConfig] -  [DUBBO] The service ready on spring started. service: com.jing.service.UserService, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:00:49,790 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.remoting.http;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class HttpBinder$Adpative implements com.alibaba.dubbo.remoting.http.HttpBinder {
public com.alibaba.dubbo.remoting.http.HttpServer bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.http.HttpHandler arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", "jetty");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.http.HttpBinder) name from url(" + url.toString() + ") use keys([server])");
com.alibaba.dubbo.remoting.http.HttpBinder extension = (com.alibaba.dubbo.remoting.http.HttpBinder)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.http.HttpBinder.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:00:49,850 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:00:49,862 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:00:49,877 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:00:49,891 INFO [com.alibaba.dubbo.config.AbstractConfig] -  [DUBBO] Export dubbo service com.jing.service.UserService to local registry, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:00:49,891 INFO [com.alibaba.dubbo.config.AbstractConfig] -  [DUBBO] Export dubbo service com.jing.service.UserService to url rest://192.168.1.184:9002/provider/com.jing.service.UserService?anyhost=true&application=test-provider&default.charset=UTF-8&default.retries=0&dubbo=2.8.4&generic=false&interface=com.jing.service.UserService&methods=getUser,saveUser&optimizer=com.jing.util.SerializationOptimizerImpl&organization=dubbox&owner=programmer&pid=162092&serialization=kryo&server=tomcat&side=provider&timestamp=1482472849798, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:00:49,891 INFO [com.alibaba.dubbo.config.AbstractConfig] -  [DUBBO] Register dubbo service com.jing.service.UserService url rest://192.168.1.184:9002/provider/com.jing.service.UserService?anyhost=true&application=test-provider&default.charset=UTF-8&default.retries=0&dubbo=2.8.4&generic=false&interface=com.jing.service.UserService&methods=getUser,saveUser&optimizer=com.jing.util.SerializationOptimizerImpl&organization=dubbox&owner=programmer&pid=162092&serialization=kryo&server=tomcat&side=provider&timestamp=1482472849798 to registry registry://192.168.1.201:2181/com.alibaba.dubbo.registry.RegistryService?application=test-provider&check=false&dubbo=2.8.4&file=false&organization=dubbox&owner=programmer&pid=162092&registry=zookeeper&timestamp=1482472849769, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:00:49,897 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:00:49,907 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:00:50,671 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:00:50,700 DEBUG [org.I0Itec.zkclient.ZkConnection] - Creating new ZookKeeper instance to connect to 192.168.1.201:2181.
2016-12-23 14:00:50,700 INFO [org.I0Itec.zkclient.ZkEventThread] - Starting ZkClient event thread.
2016-12-23 14:00:50,706 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:zookeeper.version=3.4.5-1392090, built on 09/30/2012 17:52 GMT
2016-12-23 14:00:50,706 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:host.name=MS-20160726FQSA
2016-12-23 14:00:50,706 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:java.version=1.8.0_77
2016-12-23 14:00:50,706 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:java.vendor=Oracle Corporation
2016-12-23 14:00:50,706 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:java.home=C:\Program Files\Java\jdk1.8.0_77\jre
2016-12-23 14:00:50,706 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:java.class.path=D:\mywork\test-provider\target\classes;D:\mywork\test-common\target\classes;C:\Users\Administrator\.m2\repository\com\cloudhopper\proxool\proxool\0.9.1\proxool-0.9.1.jar;C:\Users\Administrator\.m2\repository\com\cloudhopper\proxool\proxool-cglib\0.9.1\proxool-cglib-0.9.1.jar;C:\Users\Administrator\.m2\repository\avalon-framework\avalon-framework-api\4.3\avalon-framework-api-4.3.jar;C:\Users\Administrator\.m2\repository\avalon-logkit\avalon-logkit\2.1\avalon-logkit-2.1.jar;C:\Users\Administrator\.m2\repository\geronimo-spec\geronimo-spec-javamail\1.3.1-rc3\geronimo-spec-javamail-1.3.1-rc3.jar;C:\Users\Administrator\.m2\repository\geronimo-spec\geronimo-spec-jms\1.1-rc4\geronimo-spec-jms-1.1-rc4.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-core\4.1.5.RELEASE\spring-core-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-webmvc\4.1.5.RELEASE\spring-webmvc-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-beans\4.1.5.RELEASE\spring-beans-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-context\4.1.5.RELEASE\spring-context-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-expression\4.1.5.RELEASE\spring-expression-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-web\4.1.5.RELEASE\spring-web-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-jdbc\4.1.5.RELEASE\spring-jdbc-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-tx\4.1.5.RELEASE\spring-tx-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-orm\4.1.5.RELEASE\spring-orm-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-aop\4.1.5.RELEASE\spring-aop-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-aspects\4.1.5.RELEASE\spring-aspects-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\aspectj\aspectjweaver\1.8.5\aspectjweaver-1.8.5.jar;C:\Users\Administrator\.m2\repository\commons-fileupload\commons-fileupload\1.2.2\commons-fileupload-1.2.2.jar;C:\Users\Administrator\.m2\repository\org\apache\commons\commons-lang3\3.3.1\commons-lang3-3.3.1.jar;C:\Users\Administrator\.m2\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;C:\Users\Administrator\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Administrator\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Administrator\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\Administrator\.m2\repository\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;C:\Users\Administrator\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.11\jackson-mapper-asl-1.9.11.jar;C:\Users\Administrator\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.11\jackson-core-asl-1.9.11.jar;C:\Users\Administrator\.m2\repository\com\alibaba\fastjson\1.1.26\fastjson-1.1.26.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-api\1.7.6\slf4j-api-1.7.6.jar;C:\Users\Administrator\.m2\repository\org\slf4j\jul-to-slf4j\1.7.6\jul-to-slf4j-1.7.6.jar;C:\Users\Administrator\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.6\jcl-over-slf4j-1.7.6.jar;C:\Users\Administrator\.m2\repository\log4j\log4j\1.2.15\log4j-1.2.15.jar;C:\Users\Administrator\.m2\repository\javax\mail\mail\1.4\mail-1.4.jar;C:\Users\Administrator\.m2\repository\mysql\mysql-connector-java\5.1.27\mysql-connector-java-5.1.27.jar;C:\Users\Administrator\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\Administrator\.m2\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;C:\Users\Administrator\.m2\repository\com\alibaba\rocketmq\rocketmq-client\3.2.6\rocketmq-client-3.2.6.jar;C:\Users\Administrator\.m2\repository\com\alibaba\rocketmq\rocketmq-common\3.2.6\rocketmq-common-3.2.6.jar;C:\Users\Administrator\.m2\repository\com\alibaba\rocketmq\rocketmq-remoting\3.2.6\rocketmq-remoting-3.2.6.jar;C:\Users\Administrator\.m2\repository\io\netty\netty-all\4.0.25.Final\netty-all-4.0.25.Final.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpclient-cache\4.3.1\httpclient-cache-4.3.1.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpcore\4.3.1\httpcore-4.3.1.jar;C:\Users\Administrator\.m2\repository\org\apache\zookeeper\zookeeper\3.4.5\zookeeper-3.4.5.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Administrator\.m2\repository\jline\jline\0.9.94\jline-0.9.94.jar;C:\Users\Administrator\.m2\repository\org\jboss\netty\netty\3.2.2.Final\netty-3.2.2.Final.jar;C:\Users\Administrator\.m2\repository\com\101tec\zkclient\0.7\zkclient-0.7.jar;C:\Users\Administrator\.m2\repository\org\apache\curator\curator-recipes\2.4.2\curator-recipes-2.4.2.jar;C:\Users\Administrator\.m2\repository\com\google\guava\guava\14.0.1\guava-14.0.1.jar;C:\Users\Administrator\.m2\repository\redis\clients\jedis\2.7.2\jedis-2.7.2.jar;C:\Users\Administrator\.m2\repository\org\apache\commons\commons-pool2\2.3\commons-pool2-2.3.jar;C:\Users\Administrator\.m2\repository\com\alibaba\dubbo\2.8.4\dubbo-2.8.4.jar;C:\Users\Administrator\.m2\repository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar;C:\Users\Administrator\.m2\repository\org\apache\curator\curator-client\2.5.0\curator-client-2.5.0.jar;C:\Users\Administrator\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.0.11\tomcat-embed-core-8.0.11.jar;C:\Users\Administrator\.m2\repository\org\apache\tomcat\embed\tomcat-embed-logging-juli\8.0.11\tomcat-embed-logging-juli-8.0.11.jar;C:\Users\Administrator\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\Administrator\.m2\repository\org\apache\mina\mina-core\1.1.7\mina-core-1.1.7.jar;C:\Users\Administrator\.m2\repository\org\glassfish\grizzly\grizzly-core\2.1.4\grizzly-core-2.1.4.jar;C:\Users\Administrator\.m2\repository\org\glassfish\grizzly\grizzly-framework\2.1.4\grizzly-framework-2.1.4.jar;C:\Users\Administrator\.m2\repository\org\glassfish\gmbal\gmbal-api-only\3.0.0-b023\gmbal-api-only-3.0.0-b023.jar;C:\Users\Administrator\.m2\repository\org\glassfish\external\management-api\3.0.0-b012\management-api-3.0.0-b012.jar;C:\Users\Administrator\.m2\repository\org\glassfish\grizzly\grizzly-portunif\2.1.4\grizzly-portunif-2.1.4.jar;C:\Users\Administrator\.m2\repository\org\glassfish\grizzly\grizzly-rcm\2.1.4\grizzly-rcm-2.1.4.jar;C:\Users\Administrator\.m2\repository\com\thoughtworks\xstream\xstream\1.4.1\xstream-1.4.1.jar;C:\Users\Administrator\.m2\repository\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;C:\Users\Administrator\.m2\repository\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;C:\Users\Administrator\.m2\repository\org\apache\bsf\bsf-api\3.1\bsf-api-3.1.jar;C:\Users\Administrator\.m2\repository\org\apache\curator\curator-framework\2.5.0\curator-framework-2.5.0.jar;C:\Users\Administrator\.m2\repository\com\googlecode\xmemcached\xmemcached\1.3.6\xmemcached-1.3.6.jar;C:\Users\Administrator\.m2\repository\org\apache\cxf\cxf-rt-frontend-simple\2.6.1\cxf-rt-frontend-simple-2.6.1.jar;C:\Users\Administrator\.m2\repository\org\apache\cxf\cxf-api\2.6.1\cxf-api-2.6.1.jar;C:\Users\Administrator\.m2\repository\org\codehaus\woodstox\woodstox-core-asl\4.1.2\woodstox-core-asl-4.1.2.jar;C:\Users\Administrator\.m2\repository\org\codehaus\woodstox\stax2-api\3.1.1\stax2-api-3.1.1.jar;C:\Users\Administrator\.m2\repository\org\apache\ws\xmlschema\xmlschema-core\2.0.2\xmlschema-core-2.0.2.jar;C:\Users\Administrator\.m2\repository\org\apache\geronimo\specs\geronimo-javamail_1.4_spec\1.7.1\geronimo-javamail_1.4_spec-1.7.1.jar;C:\Users\Administrator\.m2\repository\wsdl4j\wsdl4j\1.6.2\wsdl4j-1.6.2.jar;C:\Users\Administrator\.m2\repository\org\apache\cxf\cxf-rt-core\2.6.1\cxf-rt-core-2.6.1.jar;C:\Users\Administrator\.m2\repository\org\apache\cxf\cxf-rt-bindings-soap\2.6.1\cxf-rt-bindings-soap-2.6.1.jar;C:\Users\Administrator\.m2\repository\org\apache\cxf\cxf-rt-databinding-jaxb\2.6.1\cxf-rt-databinding-jaxb-2.6.1.jar;C:\Users\Administrator\.m2\repository\org\apache\cxf\cxf-rt-transports-http\2.6.1\cxf-rt-transports-http-2.6.1.jar;C:\Users\Administrator\.m2\repository\org\apache\thrift\libthrift\0.8.0\libthrift-0.8.0.jar;C:\Users\Administrator\.m2\repository\commons-lang\commons-lang\2.5\commons-lang-2.5.jar;C:\Users\Administrator\.m2\repository\com\caucho\hessian\4.0.7\hessian-4.0.7.jar;C:\Users\Administrator\.m2\repository\org\mortbay\jetty\jetty\6.1.26\jetty-6.1.26.jar;C:\Users\Administrator\.m2\repository\org\mortbay\jetty\jetty-util\6.1.26\jetty-util-6.1.26.jar;C:\Users\Administrator\.m2\repository\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;C:\Users\Administrator\.m2\repository\org\hibernate\hibernate-validator\4.2.0.Final\hibernate-validator-4.2.0.Final.jar;C:\Users\Administrator\.m2\repository\javax\cache\cache-api\0.4\cache-api-0.4.jar;C:\Users\Administrator\.m2\repository\javax\ws\rs\javax.ws.rs-api\2.0\javax.ws.rs-api-2.0.jar;C:\Users\Administrator\.m2\repository\org\jboss\resteasy\resteasy-jaxrs\3.0.7.Final\resteasy-jaxrs-3.0.7.Final.jar;C:\Users\Administrator\.m2\repository\org\jboss\resteasy\jaxrs-api\3.0.7.Final\jaxrs-api-3.0.7.Final.jar;C:\Users\Administrator\.m2\repository\org\jboss\spec\javax\annotation\jboss-annotations-api_1.1_spec\1.0.1.Final\jboss-annotations-api_1.1_spec-1.0.1.Final.jar;C:\Users\Administrator\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\Administrator\.m2\repository\net\jcip\jcip-annotations\1.0\jcip-annotations-1.0.jar;C:\Users\Administrator\.m2\repository\org\jboss\resteasy\resteasy-client\3.0.7.Final\resteasy-client-3.0.7.Final.jar;C:\Users\Administrator\.m2\repository\org\jboss\resteasy\resteasy-netty\3.0.7.Final\resteasy-netty-3.0.7.Final.jar;C:\Users\Administrator\.m2\repository\org\jboss\resteasy\resteasy-jdk-http\3.0.7.Final\resteasy-jdk-http-3.0.7.Final.jar;C:\Users\Administrator\.m2\repository\org\jboss\resteasy\resteasy-jackson-provider\3.0.7.Final\resteasy-jackson-provider-3.0.7.Final.jar;C:\Users\Administrator\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.12\jackson-jaxrs-1.9.12.jar;C:\Users\Administrator\.m2\repository\org\codehaus\jackson\jackson-xc\1.9.12\jackson-xc-1.9.12.jar;C:\Users\Administrator\.m2\repository\org\jboss\resteasy\resteasy-jaxb-provider\3.0.7.Final\resteasy-jaxb-provider-3.0.7.Final.jar;C:\Users\Administrator\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.7\jaxb-impl-2.2.7.jar;C:\Users\Administrator\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.7\jaxb-core-2.2.7.jar;C:\Users\Administrator\.m2\repository\javax\xml\bind\jaxb-api\2.2.7\jaxb-api-2.2.7.jar;C:\Users\Administrator\.m2\repository\com\sun\istack\istack-commons-runtime\2.16\istack-commons-runtime-2.16.jar;C:\Users\Administrator\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.12\FastInfoset-1.2.12.jar;C:\Users\Administrator\.m2\repository\javax\xml\bind\jsr173_api\1.0\jsr173_api-1.0.jar;C:\Users\Administrator\.m2\repository\com\esotericsoftware\kryo\kryo\2.24.0\kryo-2.24.0.jar;C:\Users\Administrator\.m2\repository\com\esotericsoftware\minlog\minlog\1.2\minlog-1.2.jar;C:\Users\Administrator\.m2\repository\org\objenesis\objenesis\2.1\objenesis-2.1.jar;C:\Users\Administrator\.m2\repository\de\javakaffee\kryo-serializers\0.26\kryo-serializers-0.26.jar;C:\Users\Administrator\.m2\repository\de\ruedigermoeller\fst\1.55\fst-1.55.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar;C:\Users\Administrator\.m2\repository\org\jasig\cas\client\cas-client-core\3.1.12\cas-client-core-3.1.12.jar;C:\Users\Administrator\.m2\repository\com\alibaba\druid\0.2.15\druid-0.2.15.jar;C:\Users\Administrator\.m2\repository\org\mybatis\mybatis\3.2.8\mybatis-3.2.8.jar;C:\Users\Administrator\.m2\repository\org\mybatis\mybatis-spring\1.2.3\mybatis-spring-1.2.3.jar;C:\Users\Administrator\.m2\repository\org\mybatis\generator\mybatis-generator-core\1.3.2\mybatis-generator-core-1.3.2.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.5.3\jackson-databind-2.5.3.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.5.0\jackson-annotations-2.5.0.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.5.3\jackson-core-2.5.3.jar
2016-12-23 14:00:50,707 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:java.library.path=C:\Program Files\Java\jdk1.8.0_77\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_77/bin/server;C:/Program Files/Java/jre1.8.0_77/bin;C:/Program Files/Java/jre1.8.0_77/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\Java\jdk1.7.0_80\bin;D:\Program Files\Java\jdk1.7.0_80\jre\bin;D:\software\mysql-5.5.49-winx64\bin;C:\Program Files\TortoiseSVN\bin;D:\software\apache-maven-3.0.5\bin;C:\Program Files\Git\cmd;D:\software\eclipse;;.
2016-12-23 14:00:50,707 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\
2016-12-23 14:00:50,707 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:java.compiler=<NA>
2016-12-23 14:00:50,707 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:os.name=Windows 7
2016-12-23 14:00:50,707 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:os.arch=amd64
2016-12-23 14:00:50,707 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:os.version=6.1
2016-12-23 14:00:50,707 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:user.name=Administrator
2016-12-23 14:00:50,707 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:user.home=C:\Users\Administrator
2016-12-23 14:00:50,707 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:user.dir=D:\mywork\test-provider
2016-12-23 14:00:50,708 INFO [org.apache.zookeeper.ZooKeeper] - Initiating client connection, connectString=192.168.1.201:2181 sessionTimeout=60000 watcher=org.I0Itec.zkclient.ZkClient@114a85c2
2016-12-23 14:00:50,711 DEBUG [org.apache.zookeeper.ClientCnxn] - zookeeper.disableAutoWatchReset is false
2016-12-23 14:00:50,720 DEBUG [org.I0Itec.zkclient.ZkClient] - Awaiting connection to Zookeeper server
2016-12-23 14:00:50,720 INFO [org.I0Itec.zkclient.ZkClient] - Waiting for keeper state SyncConnected
2016-12-23 14:00:50,726 INFO [org.apache.zookeeper.ClientCnxn] - Opening socket connection to server 192.168.1.201/192.168.1.201:2181. Will not attempt to authenticate using SASL (unknown error)
2016-12-23 14:00:50,727 INFO [org.apache.zookeeper.ClientCnxn] - Socket connection established to 192.168.1.201/192.168.1.201:2181, initiating session
2016-12-23 14:00:50,729 DEBUG [org.apache.zookeeper.ClientCnxn] - Session establishment request sent on 192.168.1.201/192.168.1.201:2181
2016-12-23 14:00:50,736 WARN [org.apache.zookeeper.ClientCnxnSocket] - Connected to an old server; r-o mode will be unavailable
2016-12-23 14:00:50,736 INFO [org.apache.zookeeper.ClientCnxn] - Session establishment complete on server 192.168.1.201/192.168.1.201:2181, sessionid = 0x159256192b2001c, negotiated timeout = 40000
2016-12-23 14:00:50,738 DEBUG [org.I0Itec.zkclient.ZkClient] - Received event: WatchedEvent state:SyncConnected type:None path:null
2016-12-23 14:00:50,738 INFO [org.I0Itec.zkclient.ZkClient] - zookeeper state changed (SyncConnected)
2016-12-23 14:00:50,738 DEBUG [org.I0Itec.zkclient.ZkClient] - Leaving process event
2016-12-23 14:00:50,738 DEBUG [org.I0Itec.zkclient.ZkClient] - State is SyncConnected
2016-12-23 14:00:50,739 INFO [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] -  [DUBBO] Register: rest://192.168.1.184:9002/provider/com.jing.service.UserService?anyhost=true&application=test-provider&default.charset=UTF-8&default.retries=0&dubbo=2.8.4&generic=false&interface=com.jing.service.UserService&methods=getUser,saveUser&optimizer=com.jing.util.SerializationOptimizerImpl&organization=dubbox&owner=programmer&pid=162092&serialization=kryo&server=tomcat&side=provider&timestamp=1482472849798, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:00:50,751 DEBUG [org.apache.zookeeper.ClientCnxn] - Reading reply sessionid:0x159256192b2001c, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,1071,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2016-12-23 14:00:50,761 DEBUG [org.apache.zookeeper.ClientCnxn] - Reading reply sessionid:0x159256192b2001c, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,1072,-110  request:: '/dubbo/com.jing.service.UserService,,v{s{31,s{'world,'anyone}}},0  response::  
2016-12-23 14:00:50,764 DEBUG [org.apache.zookeeper.ClientCnxn] - Reading reply sessionid:0x159256192b2001c, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,1073,-110  request:: '/dubbo/com.jing.service.UserService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
2016-12-23 14:00:50,769 DEBUG [org.apache.zookeeper.ClientCnxn] - Reading reply sessionid:0x159256192b2001c, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,1074,0  request:: '/dubbo/com.jing.service.UserService/providers/rest%253A%252F%252F192.168.1.184%253A9002%252Fprovider%252Fcom.jing.service.UserService%253Fanyhost%253Dtrue%2526application%253Dtest-provider%2526default.charset%253DUTF-8%2526default.retries%253D0%2526dubbo%253D2.8.4%2526generic%253Dfalse%2526interface%253Dcom.jing.service.UserService%2526methods%253DgetUser%252CsaveUser%2526optimizer%253Dcom.jing.util.SerializationOptimizerImpl%2526organization%253Ddubbox%2526owner%253Dprogrammer%2526pid%253D162092%2526serialization%253Dkryo%2526server%253Dtomcat%2526side%253Dprovider%2526timestamp%253D1482472849798,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.jing.service.UserService/providers/rest%253A%252F%252F192.168.1.184%253A9002%252Fprovider%252Fcom.jing.service.UserService%253Fanyhost%253Dtrue%2526application%253Dtest-provider%2526default.charset%253DUTF-8%2526default.retries%253D0%2526dubbo%253D2.8.4%2526generic%253Dfalse%2526interface%253Dcom.jing.service.UserService%2526methods%253DgetUser%252CsaveUser%2526optimizer%253Dcom.jing.util.SerializationOptimizerImpl%2526organization%253Ddubbox%2526owner%253Dprogrammer%2526pid%253D162092%2526serialization%253Dkryo%2526server%253Dtomcat%2526side%253Dprovider%2526timestamp%253D1482472849798 
2016-12-23 14:00:50,770 INFO [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] -  [DUBBO] Subscribe: provider://192.168.1.184:9002/provider/com.jing.service.UserService?anyhost=true&application=test-provider&category=configurators&check=false&default.charset=UTF-8&default.retries=0&dubbo=2.8.4&generic=false&interface=com.jing.service.UserService&methods=getUser,saveUser&optimizer=com.jing.util.SerializationOptimizerImpl&organization=dubbox&owner=programmer&pid=162092&serialization=kryo&server=tomcat&side=provider&timestamp=1482472849798, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:00:50,781 DEBUG [org.apache.zookeeper.ClientCnxn] - Reading reply sessionid:0x159256192b2001c, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,1075,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2016-12-23 14:00:50,785 DEBUG [org.apache.zookeeper.ClientCnxn] - Reading reply sessionid:0x159256192b2001c, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,1076,-110  request:: '/dubbo/com.jing.service.UserService,,v{s{31,s{'world,'anyone}}},0  response::  
2016-12-23 14:00:50,790 DEBUG [org.apache.zookeeper.ClientCnxn] - Reading reply sessionid:0x159256192b2001c, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,1077,-110  request:: '/dubbo/com.jing.service.UserService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
2016-12-23 14:00:50,795 DEBUG [org.apache.zookeeper.ClientCnxn] - Reading reply sessionid:0x159256192b2001c, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,1077,0  request:: '/dubbo/com.jing.service.UserService/configurators,T  response:: s{163,163,1482140982240,1482140982240,0,2,0,0,0,0,518} 
2016-12-23 14:00:50,799 DEBUG [org.apache.zookeeper.ClientCnxn] - Reading reply sessionid:0x159256192b2001c, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,1077,0  request:: '/dubbo/com.jing.service.UserService/configurators,T  response:: v{} 
2016-12-23 14:00:50,800 INFO [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] -  [DUBBO] Notify urls for subscribe url provider://192.168.1.184:9002/provider/com.jing.service.UserService?anyhost=true&application=test-provider&category=configurators&check=false&default.charset=UTF-8&default.retries=0&dubbo=2.8.4&generic=false&interface=com.jing.service.UserService&methods=getUser,saveUser&optimizer=com.jing.util.SerializationOptimizerImpl&organization=dubbox&owner=programmer&pid=162092&serialization=kryo&server=tomcat&side=provider&timestamp=1482472849798, urls: [empty://192.168.1.184:9002/provider/com.jing.service.UserService?anyhost=true&application=test-provider&category=configurators&check=false&default.charset=UTF-8&default.retries=0&dubbo=2.8.4&generic=false&interface=com.jing.service.UserService&methods=getUser,saveUser&optimizer=com.jing.util.SerializationOptimizerImpl&organization=dubbox&owner=programmer&pid=162092&serialization=kryo&server=tomcat&side=provider&timestamp=1482472849798], dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:00:50,805 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:00:50,816 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:00:50,826 INFO [com.alibaba.dubbo.container.Main] -  [DUBBO] Dubbo SpringContainer started!, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:01:04,133 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001c after 1ms
2016-12-23 14:01:17,466 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001c after 1ms
2016-12-23 14:01:30,800 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001c after 1ms
2016-12-23 14:01:44,134 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001c after 1ms
2016-12-23 14:01:57,468 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001c after 1ms
2016-12-23 14:02:10,801 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001c after 1ms
2016-12-23 14:02:24,134 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001c after 0ms
2016-12-23 14:02:37,471 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001c after 1ms
2016-12-23 14:02:50,805 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001c after 1ms
2016-12-23 14:03:04,138 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001c after 0ms
2016-12-23 14:03:17,473 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001c after 0ms
2016-12-23 14:03:30,808 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001c after 1ms
2016-12-23 14:03:44,142 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001c after 1ms
2016-12-23 14:03:57,476 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001c after 1ms
2016-12-23 14:04:10,809 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001c after 1ms
2016-12-23 14:04:24,144 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001c after 1ms
2016-12-23 14:04:37,478 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001c after 1ms
2016-12-23 14:04:50,812 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001c after 1ms
2016-12-23 14:05:04,145 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001c after 1ms
2016-12-23 14:05:17,480 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001c after 2ms
2016-12-23 14:05:30,813 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001c after 0ms
2016-12-23 14:05:44,151 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001c after 3ms
2016-12-23 14:05:57,481 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001c after 0ms
2016-12-23 14:06:10,817 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001c after 1ms
2016-12-23 14:06:24,150 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001c after 0ms
2016-12-23 14:06:37,485 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001c after 1ms
2016-12-23 14:06:50,817 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001c after 0ms
2016-12-23 14:07:04,152 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001c after 1ms
2016-12-23 14:07:17,486 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001c after 1ms
2016-12-23 14:07:30,820 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001c after 1ms
2016-12-23 14:07:44,154 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001c after 1ms
2016-12-23 14:07:57,488 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001c after 0ms
2016-12-23 14:08:10,822 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001c after 1ms
2016-12-23 14:08:24,156 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001c after 1ms
2016-12-23 14:08:37,490 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001c after 1ms
2016-12-23 14:08:50,824 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001c after 1ms
2016-12-23 14:09:04,158 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001c after 1ms
2016-12-23 14:24:25,254 INFO [com.alibaba.dubbo.common.logger.LoggerFactory] - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2016-12-23 14:24:25,310 INFO [com.alibaba.dubbo.container.Main] -  [DUBBO] Use container type([spring]) to run dubbo serivce., dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:24:26,115 DEBUG [org.mybatis.spring.mapper.ClassPathMapperScanner] - Identified candidate component class: file [D:\mywork\test-provider\target\classes\com\jing\mapper\UserMapper.class]
2016-12-23 14:24:26,115 DEBUG [org.mybatis.spring.mapper.ClassPathMapperScanner] - Creating MapperFactoryBean with name 'userMapper' and 'com.jing.mapper.UserMapper' mapperInterface
2016-12-23 14:24:26,188 DEBUG [org.apache.ibatis.logging.LogFactory] - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2016-12-23 14:24:26,744 INFO [com.alibaba.druid.pool.DruidDataSource] - {dataSource-1} inited
2016-12-23 14:24:26,851 DEBUG [org.mybatis.spring.SqlSessionFactoryBean] - Parsed configuration file: 'class path resource [mybatis-configuration.xml]'
2016-12-23 14:24:26,905 DEBUG [org.mybatis.spring.SqlSessionFactoryBean] - Parsed mapper file: 'file [D:\mywork\test-provider\target\classes\mapping\UserMapper.xml]'
2016-12-23 14:24:26,984 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:24:27,130 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:24:27,159 INFO [com.alibaba.dubbo.config.AbstractConfig] -  [DUBBO] The service ready on spring started. service: com.jing.service.UserService, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:24:27,186 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.remoting.http;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class HttpBinder$Adpative implements com.alibaba.dubbo.remoting.http.HttpBinder {
public com.alibaba.dubbo.remoting.http.HttpServer bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.http.HttpHandler arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", "jetty");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.http.HttpBinder) name from url(" + url.toString() + ") use keys([server])");
com.alibaba.dubbo.remoting.http.HttpBinder extension = (com.alibaba.dubbo.remoting.http.HttpBinder)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.http.HttpBinder.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:24:27,249 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:24:27,259 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:24:27,273 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:24:27,285 INFO [com.alibaba.dubbo.config.AbstractConfig] -  [DUBBO] Export dubbo service com.jing.service.UserService to local registry, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:24:27,285 INFO [com.alibaba.dubbo.config.AbstractConfig] -  [DUBBO] Export dubbo service com.jing.service.UserService to url rest://192.168.1.184:9002/provider/com.jing.service.UserService?anyhost=true&application=test-provider&default.charset=UTF-8&default.retries=0&dubbo=2.8.4&generic=false&interface=com.jing.service.UserService&methods=getUser,saveUser&optimizer=com.jing.util.SerializationOptimizerImpl&organization=dubbox&owner=programmer&pid=165988&serialization=kryo&server=tomcat&side=provider&timestamp=1482474267196, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:24:27,285 INFO [com.alibaba.dubbo.config.AbstractConfig] -  [DUBBO] Register dubbo service com.jing.service.UserService url rest://192.168.1.184:9002/provider/com.jing.service.UserService?anyhost=true&application=test-provider&default.charset=UTF-8&default.retries=0&dubbo=2.8.4&generic=false&interface=com.jing.service.UserService&methods=getUser,saveUser&optimizer=com.jing.util.SerializationOptimizerImpl&organization=dubbox&owner=programmer&pid=165988&serialization=kryo&server=tomcat&side=provider&timestamp=1482474267196 to registry registry://192.168.1.201:2181/com.alibaba.dubbo.registry.RegistryService?application=test-provider&check=false&dubbo=2.8.4&file=false&organization=dubbox&owner=programmer&pid=165988&registry=zookeeper&timestamp=1482474267164, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:24:27,290 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:24:27,302 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:24:28,165 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:24:28,196 DEBUG [org.I0Itec.zkclient.ZkConnection] - Creating new ZookKeeper instance to connect to 192.168.1.201:2181.
2016-12-23 14:24:28,196 INFO [org.I0Itec.zkclient.ZkEventThread] - Starting ZkClient event thread.
2016-12-23 14:24:28,203 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:zookeeper.version=3.4.5-1392090, built on 09/30/2012 17:52 GMT
2016-12-23 14:24:28,204 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:host.name=MS-20160726FQSA
2016-12-23 14:24:28,204 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:java.version=1.8.0_77
2016-12-23 14:24:28,204 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:java.vendor=Oracle Corporation
2016-12-23 14:24:28,204 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:java.home=C:\Program Files\Java\jdk1.8.0_77\jre
2016-12-23 14:24:28,204 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:java.class.path=D:\mywork\test-provider\target\classes;D:\mywork\test-common\target\classes;C:\Users\Administrator\.m2\repository\com\cloudhopper\proxool\proxool\0.9.1\proxool-0.9.1.jar;C:\Users\Administrator\.m2\repository\com\cloudhopper\proxool\proxool-cglib\0.9.1\proxool-cglib-0.9.1.jar;C:\Users\Administrator\.m2\repository\avalon-framework\avalon-framework-api\4.3\avalon-framework-api-4.3.jar;C:\Users\Administrator\.m2\repository\avalon-logkit\avalon-logkit\2.1\avalon-logkit-2.1.jar;C:\Users\Administrator\.m2\repository\geronimo-spec\geronimo-spec-javamail\1.3.1-rc3\geronimo-spec-javamail-1.3.1-rc3.jar;C:\Users\Administrator\.m2\repository\geronimo-spec\geronimo-spec-jms\1.1-rc4\geronimo-spec-jms-1.1-rc4.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-core\4.1.5.RELEASE\spring-core-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-webmvc\4.1.5.RELEASE\spring-webmvc-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-beans\4.1.5.RELEASE\spring-beans-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-context\4.1.5.RELEASE\spring-context-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-expression\4.1.5.RELEASE\spring-expression-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-web\4.1.5.RELEASE\spring-web-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-jdbc\4.1.5.RELEASE\spring-jdbc-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-tx\4.1.5.RELEASE\spring-tx-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-orm\4.1.5.RELEASE\spring-orm-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-aop\4.1.5.RELEASE\spring-aop-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-aspects\4.1.5.RELEASE\spring-aspects-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\aspectj\aspectjweaver\1.8.5\aspectjweaver-1.8.5.jar;C:\Users\Administrator\.m2\repository\commons-fileupload\commons-fileupload\1.2.2\commons-fileupload-1.2.2.jar;C:\Users\Administrator\.m2\repository\org\apache\commons\commons-lang3\3.3.1\commons-lang3-3.3.1.jar;C:\Users\Administrator\.m2\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;C:\Users\Administrator\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Administrator\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Administrator\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\Administrator\.m2\repository\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;C:\Users\Administrator\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.11\jackson-mapper-asl-1.9.11.jar;C:\Users\Administrator\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.11\jackson-core-asl-1.9.11.jar;C:\Users\Administrator\.m2\repository\com\alibaba\fastjson\1.1.26\fastjson-1.1.26.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-api\1.7.6\slf4j-api-1.7.6.jar;C:\Users\Administrator\.m2\repository\org\slf4j\jul-to-slf4j\1.7.6\jul-to-slf4j-1.7.6.jar;C:\Users\Administrator\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.6\jcl-over-slf4j-1.7.6.jar;C:\Users\Administrator\.m2\repository\log4j\log4j\1.2.15\log4j-1.2.15.jar;C:\Users\Administrator\.m2\repository\javax\mail\mail\1.4\mail-1.4.jar;C:\Users\Administrator\.m2\repository\mysql\mysql-connector-java\5.1.27\mysql-connector-java-5.1.27.jar;C:\Users\Administrator\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\Administrator\.m2\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;C:\Users\Administrator\.m2\repository\com\alibaba\rocketmq\rocketmq-client\3.2.6\rocketmq-client-3.2.6.jar;C:\Users\Administrator\.m2\repository\com\alibaba\rocketmq\rocketmq-common\3.2.6\rocketmq-common-3.2.6.jar;C:\Users\Administrator\.m2\repository\com\alibaba\rocketmq\rocketmq-remoting\3.2.6\rocketmq-remoting-3.2.6.jar;C:\Users\Administrator\.m2\repository\io\netty\netty-all\4.0.25.Final\netty-all-4.0.25.Final.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpclient-cache\4.3.1\httpclient-cache-4.3.1.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpcore\4.3.1\httpcore-4.3.1.jar;C:\Users\Administrator\.m2\repository\org\apache\zookeeper\zookeeper\3.4.5\zookeeper-3.4.5.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Administrator\.m2\repository\jline\jline\0.9.94\jline-0.9.94.jar;C:\Users\Administrator\.m2\repository\org\jboss\netty\netty\3.2.2.Final\netty-3.2.2.Final.jar;C:\Users\Administrator\.m2\repository\com\101tec\zkclient\0.7\zkclient-0.7.jar;C:\Users\Administrator\.m2\repository\org\apache\curator\curator-recipes\2.4.2\curator-recipes-2.4.2.jar;C:\Users\Administrator\.m2\repository\com\google\guava\guava\14.0.1\guava-14.0.1.jar;C:\Users\Administrator\.m2\repository\redis\clients\jedis\2.7.2\jedis-2.7.2.jar;C:\Users\Administrator\.m2\repository\org\apache\commons\commons-pool2\2.3\commons-pool2-2.3.jar;C:\Users\Administrator\.m2\repository\com\alibaba\dubbo\2.8.4\dubbo-2.8.4.jar;C:\Users\Administrator\.m2\repository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar;C:\Users\Administrator\.m2\repository\org\apache\curator\curator-client\2.5.0\curator-client-2.5.0.jar;C:\Users\Administrator\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.0.11\tomcat-embed-core-8.0.11.jar;C:\Users\Administrator\.m2\repository\org\apache\tomcat\embed\tomcat-embed-logging-juli\8.0.11\tomcat-embed-logging-juli-8.0.11.jar;C:\Users\Administrator\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\Administrator\.m2\repository\org\apache\mina\mina-core\1.1.7\mina-core-1.1.7.jar;C:\Users\Administrator\.m2\repository\org\glassfish\grizzly\grizzly-core\2.1.4\grizzly-core-2.1.4.jar;C:\Users\Administrator\.m2\repository\org\glassfish\grizzly\grizzly-framework\2.1.4\grizzly-framework-2.1.4.jar;C:\Users\Administrator\.m2\repository\org\glassfish\gmbal\gmbal-api-only\3.0.0-b023\gmbal-api-only-3.0.0-b023.jar;C:\Users\Administrator\.m2\repository\org\glassfish\external\management-api\3.0.0-b012\management-api-3.0.0-b012.jar;C:\Users\Administrator\.m2\repository\org\glassfish\grizzly\grizzly-portunif\2.1.4\grizzly-portunif-2.1.4.jar;C:\Users\Administrator\.m2\repository\org\glassfish\grizzly\grizzly-rcm\2.1.4\grizzly-rcm-2.1.4.jar;C:\Users\Administrator\.m2\repository\com\thoughtworks\xstream\xstream\1.4.1\xstream-1.4.1.jar;C:\Users\Administrator\.m2\repository\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;C:\Users\Administrator\.m2\repository\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;C:\Users\Administrator\.m2\repository\org\apache\bsf\bsf-api\3.1\bsf-api-3.1.jar;C:\Users\Administrator\.m2\repository\org\apache\curator\curator-framework\2.5.0\curator-framework-2.5.0.jar;C:\Users\Administrator\.m2\repository\com\googlecode\xmemcached\xmemcached\1.3.6\xmemcached-1.3.6.jar;C:\Users\Administrator\.m2\repository\org\apache\cxf\cxf-rt-frontend-simple\2.6.1\cxf-rt-frontend-simple-2.6.1.jar;C:\Users\Administrator\.m2\repository\org\apache\cxf\cxf-api\2.6.1\cxf-api-2.6.1.jar;C:\Users\Administrator\.m2\repository\org\codehaus\woodstox\woodstox-core-asl\4.1.2\woodstox-core-asl-4.1.2.jar;C:\Users\Administrator\.m2\repository\org\codehaus\woodstox\stax2-api\3.1.1\stax2-api-3.1.1.jar;C:\Users\Administrator\.m2\repository\org\apache\ws\xmlschema\xmlschema-core\2.0.2\xmlschema-core-2.0.2.jar;C:\Users\Administrator\.m2\repository\org\apache\geronimo\specs\geronimo-javamail_1.4_spec\1.7.1\geronimo-javamail_1.4_spec-1.7.1.jar;C:\Users\Administrator\.m2\repository\wsdl4j\wsdl4j\1.6.2\wsdl4j-1.6.2.jar;C:\Users\Administrator\.m2\repository\org\apache\cxf\cxf-rt-core\2.6.1\cxf-rt-core-2.6.1.jar;C:\Users\Administrator\.m2\repository\org\apache\cxf\cxf-rt-bindings-soap\2.6.1\cxf-rt-bindings-soap-2.6.1.jar;C:\Users\Administrator\.m2\repository\org\apache\cxf\cxf-rt-databinding-jaxb\2.6.1\cxf-rt-databinding-jaxb-2.6.1.jar;C:\Users\Administrator\.m2\repository\org\apache\cxf\cxf-rt-transports-http\2.6.1\cxf-rt-transports-http-2.6.1.jar;C:\Users\Administrator\.m2\repository\org\apache\thrift\libthrift\0.8.0\libthrift-0.8.0.jar;C:\Users\Administrator\.m2\repository\commons-lang\commons-lang\2.5\commons-lang-2.5.jar;C:\Users\Administrator\.m2\repository\com\caucho\hessian\4.0.7\hessian-4.0.7.jar;C:\Users\Administrator\.m2\repository\org\mortbay\jetty\jetty\6.1.26\jetty-6.1.26.jar;C:\Users\Administrator\.m2\repository\org\mortbay\jetty\jetty-util\6.1.26\jetty-util-6.1.26.jar;C:\Users\Administrator\.m2\repository\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;C:\Users\Administrator\.m2\repository\org\hibernate\hibernate-validator\4.2.0.Final\hibernate-validator-4.2.0.Final.jar;C:\Users\Administrator\.m2\repository\javax\cache\cache-api\0.4\cache-api-0.4.jar;C:\Users\Administrator\.m2\repository\javax\ws\rs\javax.ws.rs-api\2.0\javax.ws.rs-api-2.0.jar;C:\Users\Administrator\.m2\repository\org\jboss\resteasy\resteasy-jaxrs\3.0.7.Final\resteasy-jaxrs-3.0.7.Final.jar;C:\Users\Administrator\.m2\repository\org\jboss\resteasy\jaxrs-api\3.0.7.Final\jaxrs-api-3.0.7.Final.jar;C:\Users\Administrator\.m2\repository\org\jboss\spec\javax\annotation\jboss-annotations-api_1.1_spec\1.0.1.Final\jboss-annotations-api_1.1_spec-1.0.1.Final.jar;C:\Users\Administrator\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\Administrator\.m2\repository\net\jcip\jcip-annotations\1.0\jcip-annotations-1.0.jar;C:\Users\Administrator\.m2\repository\org\jboss\resteasy\resteasy-client\3.0.7.Final\resteasy-client-3.0.7.Final.jar;C:\Users\Administrator\.m2\repository\org\jboss\resteasy\resteasy-netty\3.0.7.Final\resteasy-netty-3.0.7.Final.jar;C:\Users\Administrator\.m2\repository\org\jboss\resteasy\resteasy-jdk-http\3.0.7.Final\resteasy-jdk-http-3.0.7.Final.jar;C:\Users\Administrator\.m2\repository\org\jboss\resteasy\resteasy-jackson-provider\3.0.7.Final\resteasy-jackson-provider-3.0.7.Final.jar;C:\Users\Administrator\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.12\jackson-jaxrs-1.9.12.jar;C:\Users\Administrator\.m2\repository\org\codehaus\jackson\jackson-xc\1.9.12\jackson-xc-1.9.12.jar;C:\Users\Administrator\.m2\repository\org\jboss\resteasy\resteasy-jaxb-provider\3.0.7.Final\resteasy-jaxb-provider-3.0.7.Final.jar;C:\Users\Administrator\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.7\jaxb-impl-2.2.7.jar;C:\Users\Administrator\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.7\jaxb-core-2.2.7.jar;C:\Users\Administrator\.m2\repository\javax\xml\bind\jaxb-api\2.2.7\jaxb-api-2.2.7.jar;C:\Users\Administrator\.m2\repository\com\sun\istack\istack-commons-runtime\2.16\istack-commons-runtime-2.16.jar;C:\Users\Administrator\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.12\FastInfoset-1.2.12.jar;C:\Users\Administrator\.m2\repository\javax\xml\bind\jsr173_api\1.0\jsr173_api-1.0.jar;C:\Users\Administrator\.m2\repository\com\esotericsoftware\kryo\kryo\2.24.0\kryo-2.24.0.jar;C:\Users\Administrator\.m2\repository\com\esotericsoftware\minlog\minlog\1.2\minlog-1.2.jar;C:\Users\Administrator\.m2\repository\org\objenesis\objenesis\2.1\objenesis-2.1.jar;C:\Users\Administrator\.m2\repository\de\javakaffee\kryo-serializers\0.26\kryo-serializers-0.26.jar;C:\Users\Administrator\.m2\repository\de\ruedigermoeller\fst\1.55\fst-1.55.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar;C:\Users\Administrator\.m2\repository\org\jasig\cas\client\cas-client-core\3.1.12\cas-client-core-3.1.12.jar;C:\Users\Administrator\.m2\repository\com\alibaba\druid\0.2.15\druid-0.2.15.jar;C:\Users\Administrator\.m2\repository\org\mybatis\mybatis\3.2.8\mybatis-3.2.8.jar;C:\Users\Administrator\.m2\repository\org\mybatis\mybatis-spring\1.2.3\mybatis-spring-1.2.3.jar;C:\Users\Administrator\.m2\repository\org\mybatis\generator\mybatis-generator-core\1.3.2\mybatis-generator-core-1.3.2.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.5.3\jackson-databind-2.5.3.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.5.0\jackson-annotations-2.5.0.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.5.3\jackson-core-2.5.3.jar
2016-12-23 14:24:28,205 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:java.library.path=C:\Program Files\Java\jdk1.8.0_77\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_77/bin/server;C:/Program Files/Java/jre1.8.0_77/bin;C:/Program Files/Java/jre1.8.0_77/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\Java\jdk1.7.0_80\bin;D:\Program Files\Java\jdk1.7.0_80\jre\bin;D:\software\mysql-5.5.49-winx64\bin;C:\Program Files\TortoiseSVN\bin;D:\software\apache-maven-3.0.5\bin;C:\Program Files\Git\cmd;D:\software\eclipse;;.
2016-12-23 14:24:28,205 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\
2016-12-23 14:24:28,205 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:java.compiler=<NA>
2016-12-23 14:24:28,205 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:os.name=Windows 7
2016-12-23 14:24:28,205 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:os.arch=amd64
2016-12-23 14:24:28,205 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:os.version=6.1
2016-12-23 14:24:28,205 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:user.name=Administrator
2016-12-23 14:24:28,205 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:user.home=C:\Users\Administrator
2016-12-23 14:24:28,205 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:user.dir=D:\mywork\test-provider
2016-12-23 14:24:28,206 INFO [org.apache.zookeeper.ZooKeeper] - Initiating client connection, connectString=192.168.1.201:2181 sessionTimeout=60000 watcher=org.I0Itec.zkclient.ZkClient@114a85c2
2016-12-23 14:24:28,209 DEBUG [org.apache.zookeeper.ClientCnxn] - zookeeper.disableAutoWatchReset is false
2016-12-23 14:24:28,218 DEBUG [org.I0Itec.zkclient.ZkClient] - Awaiting connection to Zookeeper server
2016-12-23 14:24:28,218 INFO [org.I0Itec.zkclient.ZkClient] - Waiting for keeper state SyncConnected
2016-12-23 14:24:28,224 INFO [org.apache.zookeeper.ClientCnxn] - Opening socket connection to server 192.168.1.201/192.168.1.201:2181. Will not attempt to authenticate using SASL (unknown error)
2016-12-23 14:24:28,226 INFO [org.apache.zookeeper.ClientCnxn] - Socket connection established to 192.168.1.201/192.168.1.201:2181, initiating session
2016-12-23 14:24:28,227 DEBUG [org.apache.zookeeper.ClientCnxn] - Session establishment request sent on 192.168.1.201/192.168.1.201:2181
2016-12-23 14:24:28,233 WARN [org.apache.zookeeper.ClientCnxnSocket] - Connected to an old server; r-o mode will be unavailable
2016-12-23 14:24:28,233 INFO [org.apache.zookeeper.ClientCnxn] - Session establishment complete on server 192.168.1.201/192.168.1.201:2181, sessionid = 0x159256192b2001e, negotiated timeout = 40000
2016-12-23 14:24:28,235 DEBUG [org.I0Itec.zkclient.ZkClient] - Received event: WatchedEvent state:SyncConnected type:None path:null
2016-12-23 14:24:28,236 INFO [org.I0Itec.zkclient.ZkClient] - zookeeper state changed (SyncConnected)
2016-12-23 14:24:28,236 DEBUG [org.I0Itec.zkclient.ZkClient] - Leaving process event
2016-12-23 14:24:28,236 DEBUG [org.I0Itec.zkclient.ZkClient] - State is SyncConnected
2016-12-23 14:24:28,237 INFO [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] -  [DUBBO] Register: rest://192.168.1.184:9002/provider/com.jing.service.UserService?anyhost=true&application=test-provider&default.charset=UTF-8&default.retries=0&dubbo=2.8.4&generic=false&interface=com.jing.service.UserService&methods=getUser,saveUser&optimizer=com.jing.util.SerializationOptimizerImpl&organization=dubbox&owner=programmer&pid=165988&serialization=kryo&server=tomcat&side=provider&timestamp=1482474267196, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:24:28,247 DEBUG [org.apache.zookeeper.ClientCnxn] - Reading reply sessionid:0x159256192b2001e, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,1088,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2016-12-23 14:24:28,256 DEBUG [org.apache.zookeeper.ClientCnxn] - Reading reply sessionid:0x159256192b2001e, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,1089,-110  request:: '/dubbo/com.jing.service.UserService,,v{s{31,s{'world,'anyone}}},0  response::  
2016-12-23 14:24:28,258 DEBUG [org.apache.zookeeper.ClientCnxn] - Reading reply sessionid:0x159256192b2001e, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,1090,-110  request:: '/dubbo/com.jing.service.UserService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
2016-12-23 14:24:28,264 DEBUG [org.apache.zookeeper.ClientCnxn] - Reading reply sessionid:0x159256192b2001e, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,1091,0  request:: '/dubbo/com.jing.service.UserService/providers/rest%253A%252F%252F192.168.1.184%253A9002%252Fprovider%252Fcom.jing.service.UserService%253Fanyhost%253Dtrue%2526application%253Dtest-provider%2526default.charset%253DUTF-8%2526default.retries%253D0%2526dubbo%253D2.8.4%2526generic%253Dfalse%2526interface%253Dcom.jing.service.UserService%2526methods%253DgetUser%252CsaveUser%2526optimizer%253Dcom.jing.util.SerializationOptimizerImpl%2526organization%253Ddubbox%2526owner%253Dprogrammer%2526pid%253D165988%2526serialization%253Dkryo%2526server%253Dtomcat%2526side%253Dprovider%2526timestamp%253D1482474267196,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.jing.service.UserService/providers/rest%253A%252F%252F192.168.1.184%253A9002%252Fprovider%252Fcom.jing.service.UserService%253Fanyhost%253Dtrue%2526application%253Dtest-provider%2526default.charset%253DUTF-8%2526default.retries%253D0%2526dubbo%253D2.8.4%2526generic%253Dfalse%2526interface%253Dcom.jing.service.UserService%2526methods%253DgetUser%252CsaveUser%2526optimizer%253Dcom.jing.util.SerializationOptimizerImpl%2526organization%253Ddubbox%2526owner%253Dprogrammer%2526pid%253D165988%2526serialization%253Dkryo%2526server%253Dtomcat%2526side%253Dprovider%2526timestamp%253D1482474267196 
2016-12-23 14:24:28,266 INFO [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] -  [DUBBO] Subscribe: provider://192.168.1.184:9002/provider/com.jing.service.UserService?anyhost=true&application=test-provider&category=configurators&check=false&default.charset=UTF-8&default.retries=0&dubbo=2.8.4&generic=false&interface=com.jing.service.UserService&methods=getUser,saveUser&optimizer=com.jing.util.SerializationOptimizerImpl&organization=dubbox&owner=programmer&pid=165988&serialization=kryo&server=tomcat&side=provider&timestamp=1482474267196, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:24:28,272 DEBUG [org.apache.zookeeper.ClientCnxn] - Reading reply sessionid:0x159256192b2001e, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,1092,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2016-12-23 14:24:28,276 DEBUG [org.apache.zookeeper.ClientCnxn] - Reading reply sessionid:0x159256192b2001e, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,1093,-110  request:: '/dubbo/com.jing.service.UserService,,v{s{31,s{'world,'anyone}}},0  response::  
2016-12-23 14:24:28,279 DEBUG [org.apache.zookeeper.ClientCnxn] - Reading reply sessionid:0x159256192b2001e, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,1094,-110  request:: '/dubbo/com.jing.service.UserService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
2016-12-23 14:24:28,283 DEBUG [org.apache.zookeeper.ClientCnxn] - Reading reply sessionid:0x159256192b2001e, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,1094,0  request:: '/dubbo/com.jing.service.UserService/configurators,T  response:: s{163,163,1482140982240,1482140982240,0,2,0,0,0,0,518} 
2016-12-23 14:24:28,287 DEBUG [org.apache.zookeeper.ClientCnxn] - Reading reply sessionid:0x159256192b2001e, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,1094,0  request:: '/dubbo/com.jing.service.UserService/configurators,T  response:: v{} 
2016-12-23 14:24:28,287 INFO [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] -  [DUBBO] Notify urls for subscribe url provider://192.168.1.184:9002/provider/com.jing.service.UserService?anyhost=true&application=test-provider&category=configurators&check=false&default.charset=UTF-8&default.retries=0&dubbo=2.8.4&generic=false&interface=com.jing.service.UserService&methods=getUser,saveUser&optimizer=com.jing.util.SerializationOptimizerImpl&organization=dubbox&owner=programmer&pid=165988&serialization=kryo&server=tomcat&side=provider&timestamp=1482474267196, urls: [empty://192.168.1.184:9002/provider/com.jing.service.UserService?anyhost=true&application=test-provider&category=configurators&check=false&default.charset=UTF-8&default.retries=0&dubbo=2.8.4&generic=false&interface=com.jing.service.UserService&methods=getUser,saveUser&optimizer=com.jing.util.SerializationOptimizerImpl&organization=dubbox&owner=programmer&pid=165988&serialization=kryo&server=tomcat&side=provider&timestamp=1482474267196], dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:24:28,293 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:24:28,302 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:24:28,311 INFO [com.alibaba.dubbo.container.Main] -  [DUBBO] Dubbo SpringContainer started!, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:24:41,621 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001e after 1ms
2016-12-23 14:24:54,955 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001e after 0ms
2016-12-23 14:25:08,289 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001e after 1ms
2016-12-23 14:25:21,623 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001e after 1ms
2016-12-23 14:26:29,125 INFO [com.alibaba.dubbo.common.logger.LoggerFactory] - using logger: com.alibaba.dubbo.common.logger.log4j.Log4jLoggerAdapter
2016-12-23 14:26:29,181 INFO [com.alibaba.dubbo.container.Main] -  [DUBBO] Use container type([spring]) to run dubbo serivce., dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:26:29,934 DEBUG [org.mybatis.spring.mapper.ClassPathMapperScanner] - Identified candidate component class: file [D:\mywork\test-provider\target\classes\com\jing\mapper\UserMapper.class]
2016-12-23 14:26:29,934 DEBUG [org.mybatis.spring.mapper.ClassPathMapperScanner] - Creating MapperFactoryBean with name 'userMapper' and 'com.jing.mapper.UserMapper' mapperInterface
2016-12-23 14:26:29,999 DEBUG [org.apache.ibatis.logging.LogFactory] - Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
2016-12-23 14:26:30,550 INFO [com.alibaba.druid.pool.DruidDataSource] - {dataSource-1} inited
2016-12-23 14:26:30,653 DEBUG [org.mybatis.spring.SqlSessionFactoryBean] - Parsed configuration file: 'class path resource [mybatis-configuration.xml]'
2016-12-23 14:26:30,707 DEBUG [org.mybatis.spring.SqlSessionFactoryBean] - Parsed mapper file: 'file [D:\mywork\test-provider\target\classes\mapping\UserMapper.xml]'
2016-12-23 14:26:30,782 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adpative implements com.alibaba.dubbo.rpc.Protocol {
public void destroy() {throw new UnsupportedOperationException("method public abstract void com.alibaba.dubbo.rpc.Protocol.destroy() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort() {throw new UnsupportedOperationException("method public abstract int com.alibaba.dubbo.rpc.Protocol.getDefaultPort() of interface com.alibaba.dubbo.rpc.Protocol is not adaptive method!");
}
public com.alibaba.dubbo.rpc.Exporter export(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public com.alibaba.dubbo.rpc.Invoker refer(java.lang.Class arg0, com.alibaba.dubbo.common.URL arg1) throws java.lang.Class {
if (arg1 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.Protocol) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.Protocol extension = (com.alibaba.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:26:30,924 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adpative implements com.alibaba.dubbo.rpc.ProxyFactory {
public com.alibaba.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, com.alibaba.dubbo.common.URL arg2) throws java.lang.Object {
if (arg2 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(com.alibaba.dubbo.rpc.Invoker arg0) throws com.alibaba.dubbo.rpc.Invoker {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.Invoker argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.ProxyFactory) name from url(" + url.toString() + ") use keys([proxy])");
com.alibaba.dubbo.rpc.ProxyFactory extension = (com.alibaba.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:26:30,954 INFO [com.alibaba.dubbo.config.AbstractConfig] -  [DUBBO] The service ready on spring started. service: com.jing.service.UserService, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:26:30,980 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.remoting.http;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class HttpBinder$Adpative implements com.alibaba.dubbo.remoting.http.HttpBinder {
public com.alibaba.dubbo.remoting.http.HttpServer bind(com.alibaba.dubbo.common.URL arg0, com.alibaba.dubbo.remoting.http.HttpHandler arg1) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", "jetty");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.http.HttpBinder) name from url(" + url.toString() + ") use keys([server])");
com.alibaba.dubbo.remoting.http.HttpBinder extension = (com.alibaba.dubbo.remoting.http.HttpBinder)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.http.HttpBinder.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:26:31,042 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.cache;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adpative implements com.alibaba.dubbo.cache.CacheFactory {
public com.alibaba.dubbo.cache.Cache getCache(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("cache", "lru");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.cache.CacheFactory) name from url(" + url.toString() + ") use keys([cache])");
com.alibaba.dubbo.cache.CacheFactory extension = (com.alibaba.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:26:31,054 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.monitor;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adpative implements com.alibaba.dubbo.monitor.MonitorFactory {
public com.alibaba.dubbo.monitor.Monitor getMonitor(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.monitor.MonitorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.monitor.MonitorFactory extension = (com.alibaba.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:26:31,068 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.validation;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Validation$Adpative implements com.alibaba.dubbo.validation.Validation {
public com.alibaba.dubbo.validation.Validator getValidator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.validation.Validation) name from url(" + url.toString() + ") use keys([validation])");
com.alibaba.dubbo.validation.Validation extension = (com.alibaba.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:26:31,079 INFO [com.alibaba.dubbo.config.AbstractConfig] -  [DUBBO] Export dubbo service com.jing.service.UserService to local registry, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:26:31,079 INFO [com.alibaba.dubbo.config.AbstractConfig] -  [DUBBO] Export dubbo service com.jing.service.UserService to url rest://192.168.1.184:9002/provider/com.jing.service.UserService?anyhost=true&application=test-provider&default.charset=UTF-8&default.retries=0&dubbo=2.8.4&generic=false&interface=com.jing.service.UserService&methods=getUser,saveUser&optimizer=com.jing.util.SerializationOptimizerImpl&organization=dubbox&owner=programmer&pid=64060&serialization=kryo&server=tomcat&side=provider&timestamp=1482474390991, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:26:31,079 INFO [com.alibaba.dubbo.config.AbstractConfig] -  [DUBBO] Register dubbo service com.jing.service.UserService url rest://192.168.1.184:9002/provider/com.jing.service.UserService?anyhost=true&application=test-provider&default.charset=UTF-8&default.retries=0&dubbo=2.8.4&generic=false&interface=com.jing.service.UserService&methods=getUser,saveUser&optimizer=com.jing.util.SerializationOptimizerImpl&organization=dubbox&owner=programmer&pid=64060&serialization=kryo&server=tomcat&side=provider&timestamp=1482474390991 to registry registry://192.168.1.201:2181/com.alibaba.dubbo.registry.RegistryService?application=test-provider&check=false&dubbo=2.8.4&file=false&organization=dubbox&owner=programmer&pid=64060&registry=zookeeper&timestamp=1482474390959, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:26:31,082 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.registry;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adpative implements com.alibaba.dubbo.registry.RegistryFactory {
public com.alibaba.dubbo.registry.Registry getRegistry(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.registry.RegistryFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.registry.RegistryFactory extension = (com.alibaba.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:26:31,094 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adpative implements com.alibaba.dubbo.rpc.cluster.Cluster {
public com.alibaba.dubbo.rpc.Invoker join(com.alibaba.dubbo.rpc.cluster.Directory arg0) throws com.alibaba.dubbo.rpc.cluster.Directory {
if (arg0 == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("com.alibaba.dubbo.rpc.cluster.Directory argument getUrl() == null");com.alibaba.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.Cluster) name from url(" + url.toString() + ") use keys([cluster])");
com.alibaba.dubbo.rpc.cluster.Cluster extension = (com.alibaba.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:26:31,886 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.remoting.zookeeper;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ZookeeperTransporter$Adpative implements com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter {
public com.alibaba.dubbo.remoting.zookeeper.ZookeeperClient connect(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "zkclient"));
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter) name from url(" + url.toString() + ") use keys([client, transporter])");
com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter extension = (com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.remoting.zookeeper.ZookeeperTransporter.class).getExtension(extName);
return extension.connect(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:26:31,912 DEBUG [org.I0Itec.zkclient.ZkConnection] - Creating new ZookKeeper instance to connect to 192.168.1.201:2181.
2016-12-23 14:26:31,912 INFO [org.I0Itec.zkclient.ZkEventThread] - Starting ZkClient event thread.
2016-12-23 14:26:31,919 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:zookeeper.version=3.4.5-1392090, built on 09/30/2012 17:52 GMT
2016-12-23 14:26:31,920 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:host.name=MS-20160726FQSA
2016-12-23 14:26:31,920 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:java.version=1.8.0_77
2016-12-23 14:26:31,920 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:java.vendor=Oracle Corporation
2016-12-23 14:26:31,920 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:java.home=C:\Program Files\Java\jdk1.8.0_77\jre
2016-12-23 14:26:31,920 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:java.class.path=D:\mywork\test-provider\target\classes;D:\mywork\test-common\target\classes;C:\Users\Administrator\.m2\repository\com\cloudhopper\proxool\proxool\0.9.1\proxool-0.9.1.jar;C:\Users\Administrator\.m2\repository\com\cloudhopper\proxool\proxool-cglib\0.9.1\proxool-cglib-0.9.1.jar;C:\Users\Administrator\.m2\repository\avalon-framework\avalon-framework-api\4.3\avalon-framework-api-4.3.jar;C:\Users\Administrator\.m2\repository\avalon-logkit\avalon-logkit\2.1\avalon-logkit-2.1.jar;C:\Users\Administrator\.m2\repository\geronimo-spec\geronimo-spec-javamail\1.3.1-rc3\geronimo-spec-javamail-1.3.1-rc3.jar;C:\Users\Administrator\.m2\repository\geronimo-spec\geronimo-spec-jms\1.1-rc4\geronimo-spec-jms-1.1-rc4.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-core\4.1.5.RELEASE\spring-core-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-webmvc\4.1.5.RELEASE\spring-webmvc-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-beans\4.1.5.RELEASE\spring-beans-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-context\4.1.5.RELEASE\spring-context-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-expression\4.1.5.RELEASE\spring-expression-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-web\4.1.5.RELEASE\spring-web-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-jdbc\4.1.5.RELEASE\spring-jdbc-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-tx\4.1.5.RELEASE\spring-tx-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-orm\4.1.5.RELEASE\spring-orm-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-aop\4.1.5.RELEASE\spring-aop-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;C:\Users\Administrator\.m2\repository\org\springframework\spring-aspects\4.1.5.RELEASE\spring-aspects-4.1.5.RELEASE.jar;C:\Users\Administrator\.m2\repository\org\aspectj\aspectjweaver\1.8.5\aspectjweaver-1.8.5.jar;C:\Users\Administrator\.m2\repository\commons-fileupload\commons-fileupload\1.2.2\commons-fileupload-1.2.2.jar;C:\Users\Administrator\.m2\repository\org\apache\commons\commons-lang3\3.3.1\commons-lang3-3.3.1.jar;C:\Users\Administrator\.m2\repository\commons-io\commons-io\2.4\commons-io-2.4.jar;C:\Users\Administrator\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;C:\Users\Administrator\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;C:\Users\Administrator\.m2\repository\commons-logging\commons-logging\1.1.3\commons-logging-1.1.3.jar;C:\Users\Administrator\.m2\repository\commons-codec\commons-codec\1.6\commons-codec-1.6.jar;C:\Users\Administrator\.m2\repository\org\codehaus\jackson\jackson-mapper-asl\1.9.11\jackson-mapper-asl-1.9.11.jar;C:\Users\Administrator\.m2\repository\org\codehaus\jackson\jackson-core-asl\1.9.11\jackson-core-asl-1.9.11.jar;C:\Users\Administrator\.m2\repository\com\alibaba\fastjson\1.1.26\fastjson-1.1.26.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-api\1.7.6\slf4j-api-1.7.6.jar;C:\Users\Administrator\.m2\repository\org\slf4j\jul-to-slf4j\1.7.6\jul-to-slf4j-1.7.6.jar;C:\Users\Administrator\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.6\jcl-over-slf4j-1.7.6.jar;C:\Users\Administrator\.m2\repository\log4j\log4j\1.2.15\log4j-1.2.15.jar;C:\Users\Administrator\.m2\repository\javax\mail\mail\1.4\mail-1.4.jar;C:\Users\Administrator\.m2\repository\mysql\mysql-connector-java\5.1.27\mysql-connector-java-5.1.27.jar;C:\Users\Administrator\.m2\repository\javax\servlet\jstl\1.2\jstl-1.2.jar;C:\Users\Administrator\.m2\repository\javax\servlet\javax.servlet-api\3.1.0\javax.servlet-api-3.1.0.jar;C:\Users\Administrator\.m2\repository\com\alibaba\rocketmq\rocketmq-client\3.2.6\rocketmq-client-3.2.6.jar;C:\Users\Administrator\.m2\repository\com\alibaba\rocketmq\rocketmq-common\3.2.6\rocketmq-common-3.2.6.jar;C:\Users\Administrator\.m2\repository\com\alibaba\rocketmq\rocketmq-remoting\3.2.6\rocketmq-remoting-3.2.6.jar;C:\Users\Administrator\.m2\repository\io\netty\netty-all\4.0.25.Final\netty-all-4.0.25.Final.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpclient-cache\4.3.1\httpclient-cache-4.3.1.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpclient\4.3.1\httpclient-4.3.1.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpcore\4.3.1\httpcore-4.3.1.jar;C:\Users\Administrator\.m2\repository\org\apache\zookeeper\zookeeper\3.4.5\zookeeper-3.4.5.jar;C:\Users\Administrator\.m2\repository\org\slf4j\slf4j-log4j12\1.6.1\slf4j-log4j12-1.6.1.jar;C:\Users\Administrator\.m2\repository\jline\jline\0.9.94\jline-0.9.94.jar;C:\Users\Administrator\.m2\repository\org\jboss\netty\netty\3.2.2.Final\netty-3.2.2.Final.jar;C:\Users\Administrator\.m2\repository\com\101tec\zkclient\0.7\zkclient-0.7.jar;C:\Users\Administrator\.m2\repository\org\apache\curator\curator-recipes\2.4.2\curator-recipes-2.4.2.jar;C:\Users\Administrator\.m2\repository\com\google\guava\guava\14.0.1\guava-14.0.1.jar;C:\Users\Administrator\.m2\repository\redis\clients\jedis\2.7.2\jedis-2.7.2.jar;C:\Users\Administrator\.m2\repository\org\apache\commons\commons-pool2\2.3\commons-pool2-2.3.jar;C:\Users\Administrator\.m2\repository\com\alibaba\dubbo\2.8.4\dubbo-2.8.4.jar;C:\Users\Administrator\.m2\repository\io\netty\netty\3.7.0.Final\netty-3.7.0.Final.jar;C:\Users\Administrator\.m2\repository\org\apache\curator\curator-client\2.5.0\curator-client-2.5.0.jar;C:\Users\Administrator\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\8.0.11\tomcat-embed-core-8.0.11.jar;C:\Users\Administrator\.m2\repository\org\apache\tomcat\embed\tomcat-embed-logging-juli\8.0.11\tomcat-embed-logging-juli-8.0.11.jar;C:\Users\Administrator\.m2\repository\org\javassist\javassist\3.15.0-GA\javassist-3.15.0-GA.jar;C:\Users\Administrator\.m2\repository\org\apache\mina\mina-core\1.1.7\mina-core-1.1.7.jar;C:\Users\Administrator\.m2\repository\org\glassfish\grizzly\grizzly-core\2.1.4\grizzly-core-2.1.4.jar;C:\Users\Administrator\.m2\repository\org\glassfish\grizzly\grizzly-framework\2.1.4\grizzly-framework-2.1.4.jar;C:\Users\Administrator\.m2\repository\org\glassfish\gmbal\gmbal-api-only\3.0.0-b023\gmbal-api-only-3.0.0-b023.jar;C:\Users\Administrator\.m2\repository\org\glassfish\external\management-api\3.0.0-b012\management-api-3.0.0-b012.jar;C:\Users\Administrator\.m2\repository\org\glassfish\grizzly\grizzly-portunif\2.1.4\grizzly-portunif-2.1.4.jar;C:\Users\Administrator\.m2\repository\org\glassfish\grizzly\grizzly-rcm\2.1.4\grizzly-rcm-2.1.4.jar;C:\Users\Administrator\.m2\repository\com\thoughtworks\xstream\xstream\1.4.1\xstream-1.4.1.jar;C:\Users\Administrator\.m2\repository\xmlpull\xmlpull\1.1.3.1\xmlpull-1.1.3.1.jar;C:\Users\Administrator\.m2\repository\xpp3\xpp3_min\1.1.4c\xpp3_min-1.1.4c.jar;C:\Users\Administrator\.m2\repository\org\apache\bsf\bsf-api\3.1\bsf-api-3.1.jar;C:\Users\Administrator\.m2\repository\org\apache\curator\curator-framework\2.5.0\curator-framework-2.5.0.jar;C:\Users\Administrator\.m2\repository\com\googlecode\xmemcached\xmemcached\1.3.6\xmemcached-1.3.6.jar;C:\Users\Administrator\.m2\repository\org\apache\cxf\cxf-rt-frontend-simple\2.6.1\cxf-rt-frontend-simple-2.6.1.jar;C:\Users\Administrator\.m2\repository\org\apache\cxf\cxf-api\2.6.1\cxf-api-2.6.1.jar;C:\Users\Administrator\.m2\repository\org\codehaus\woodstox\woodstox-core-asl\4.1.2\woodstox-core-asl-4.1.2.jar;C:\Users\Administrator\.m2\repository\org\codehaus\woodstox\stax2-api\3.1.1\stax2-api-3.1.1.jar;C:\Users\Administrator\.m2\repository\org\apache\ws\xmlschema\xmlschema-core\2.0.2\xmlschema-core-2.0.2.jar;C:\Users\Administrator\.m2\repository\org\apache\geronimo\specs\geronimo-javamail_1.4_spec\1.7.1\geronimo-javamail_1.4_spec-1.7.1.jar;C:\Users\Administrator\.m2\repository\wsdl4j\wsdl4j\1.6.2\wsdl4j-1.6.2.jar;C:\Users\Administrator\.m2\repository\org\apache\cxf\cxf-rt-core\2.6.1\cxf-rt-core-2.6.1.jar;C:\Users\Administrator\.m2\repository\org\apache\cxf\cxf-rt-bindings-soap\2.6.1\cxf-rt-bindings-soap-2.6.1.jar;C:\Users\Administrator\.m2\repository\org\apache\cxf\cxf-rt-databinding-jaxb\2.6.1\cxf-rt-databinding-jaxb-2.6.1.jar;C:\Users\Administrator\.m2\repository\org\apache\cxf\cxf-rt-transports-http\2.6.1\cxf-rt-transports-http-2.6.1.jar;C:\Users\Administrator\.m2\repository\org\apache\thrift\libthrift\0.8.0\libthrift-0.8.0.jar;C:\Users\Administrator\.m2\repository\commons-lang\commons-lang\2.5\commons-lang-2.5.jar;C:\Users\Administrator\.m2\repository\com\caucho\hessian\4.0.7\hessian-4.0.7.jar;C:\Users\Administrator\.m2\repository\org\mortbay\jetty\jetty\6.1.26\jetty-6.1.26.jar;C:\Users\Administrator\.m2\repository\org\mortbay\jetty\jetty-util\6.1.26\jetty-util-6.1.26.jar;C:\Users\Administrator\.m2\repository\javax\validation\validation-api\1.0.0.GA\validation-api-1.0.0.GA.jar;C:\Users\Administrator\.m2\repository\org\hibernate\hibernate-validator\4.2.0.Final\hibernate-validator-4.2.0.Final.jar;C:\Users\Administrator\.m2\repository\javax\cache\cache-api\0.4\cache-api-0.4.jar;C:\Users\Administrator\.m2\repository\javax\ws\rs\javax.ws.rs-api\2.0\javax.ws.rs-api-2.0.jar;C:\Users\Administrator\.m2\repository\org\jboss\resteasy\resteasy-jaxrs\3.0.7.Final\resteasy-jaxrs-3.0.7.Final.jar;C:\Users\Administrator\.m2\repository\org\jboss\resteasy\jaxrs-api\3.0.7.Final\jaxrs-api-3.0.7.Final.jar;C:\Users\Administrator\.m2\repository\org\jboss\spec\javax\annotation\jboss-annotations-api_1.1_spec\1.0.1.Final\jboss-annotations-api_1.1_spec-1.0.1.Final.jar;C:\Users\Administrator\.m2\repository\javax\activation\activation\1.1\activation-1.1.jar;C:\Users\Administrator\.m2\repository\net\jcip\jcip-annotations\1.0\jcip-annotations-1.0.jar;C:\Users\Administrator\.m2\repository\org\jboss\resteasy\resteasy-client\3.0.7.Final\resteasy-client-3.0.7.Final.jar;C:\Users\Administrator\.m2\repository\org\jboss\resteasy\resteasy-netty\3.0.7.Final\resteasy-netty-3.0.7.Final.jar;C:\Users\Administrator\.m2\repository\org\jboss\resteasy\resteasy-jdk-http\3.0.7.Final\resteasy-jdk-http-3.0.7.Final.jar;C:\Users\Administrator\.m2\repository\org\jboss\resteasy\resteasy-jackson-provider\3.0.7.Final\resteasy-jackson-provider-3.0.7.Final.jar;C:\Users\Administrator\.m2\repository\org\codehaus\jackson\jackson-jaxrs\1.9.12\jackson-jaxrs-1.9.12.jar;C:\Users\Administrator\.m2\repository\org\codehaus\jackson\jackson-xc\1.9.12\jackson-xc-1.9.12.jar;C:\Users\Administrator\.m2\repository\org\jboss\resteasy\resteasy-jaxb-provider\3.0.7.Final\resteasy-jaxb-provider-3.0.7.Final.jar;C:\Users\Administrator\.m2\repository\com\sun\xml\bind\jaxb-impl\2.2.7\jaxb-impl-2.2.7.jar;C:\Users\Administrator\.m2\repository\com\sun\xml\bind\jaxb-core\2.2.7\jaxb-core-2.2.7.jar;C:\Users\Administrator\.m2\repository\javax\xml\bind\jaxb-api\2.2.7\jaxb-api-2.2.7.jar;C:\Users\Administrator\.m2\repository\com\sun\istack\istack-commons-runtime\2.16\istack-commons-runtime-2.16.jar;C:\Users\Administrator\.m2\repository\com\sun\xml\fastinfoset\FastInfoset\1.2.12\FastInfoset-1.2.12.jar;C:\Users\Administrator\.m2\repository\javax\xml\bind\jsr173_api\1.0\jsr173_api-1.0.jar;C:\Users\Administrator\.m2\repository\com\esotericsoftware\kryo\kryo\2.24.0\kryo-2.24.0.jar;C:\Users\Administrator\.m2\repository\com\esotericsoftware\minlog\minlog\1.2\minlog-1.2.jar;C:\Users\Administrator\.m2\repository\org\objenesis\objenesis\2.1\objenesis-2.1.jar;C:\Users\Administrator\.m2\repository\de\javakaffee\kryo-serializers\0.26\kryo-serializers-0.26.jar;C:\Users\Administrator\.m2\repository\de\ruedigermoeller\fst\1.55\fst-1.55.jar;C:\Users\Administrator\.m2\repository\org\apache\httpcomponents\httpmime\4.3.1\httpmime-4.3.1.jar;C:\Users\Administrator\.m2\repository\org\jasig\cas\client\cas-client-core\3.1.12\cas-client-core-3.1.12.jar;C:\Users\Administrator\.m2\repository\com\alibaba\druid\0.2.15\druid-0.2.15.jar;C:\Users\Administrator\.m2\repository\org\mybatis\mybatis\3.2.8\mybatis-3.2.8.jar;C:\Users\Administrator\.m2\repository\org\mybatis\mybatis-spring\1.2.3\mybatis-spring-1.2.3.jar;C:\Users\Administrator\.m2\repository\org\mybatis\generator\mybatis-generator-core\1.3.2\mybatis-generator-core-1.3.2.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.5.3\jackson-databind-2.5.3.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.5.0\jackson-annotations-2.5.0.jar;C:\Users\Administrator\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.5.3\jackson-core-2.5.3.jar
2016-12-23 14:26:31,921 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:java.library.path=C:\Program Files\Java\jdk1.8.0_77\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_77/bin/server;C:/Program Files/Java/jre1.8.0_77/bin;C:/Program Files/Java/jre1.8.0_77/lib/amd64;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;D:\Program Files\Java\jdk1.7.0_80\bin;D:\Program Files\Java\jdk1.7.0_80\jre\bin;D:\software\mysql-5.5.49-winx64\bin;C:\Program Files\TortoiseSVN\bin;D:\software\apache-maven-3.0.5\bin;C:\Program Files\Git\cmd;D:\software\eclipse;;.
2016-12-23 14:26:31,921 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:java.io.tmpdir=C:\Users\ADMINI~1\AppData\Local\Temp\
2016-12-23 14:26:31,921 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:java.compiler=<NA>
2016-12-23 14:26:31,921 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:os.name=Windows 7
2016-12-23 14:26:31,922 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:os.arch=amd64
2016-12-23 14:26:31,922 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:os.version=6.1
2016-12-23 14:26:31,922 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:user.name=Administrator
2016-12-23 14:26:31,922 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:user.home=C:\Users\Administrator
2016-12-23 14:26:31,922 INFO [org.apache.zookeeper.ZooKeeper] - Client environment:user.dir=D:\mywork\test-provider
2016-12-23 14:26:31,923 INFO [org.apache.zookeeper.ZooKeeper] - Initiating client connection, connectString=192.168.1.201:2181 sessionTimeout=60000 watcher=org.I0Itec.zkclient.ZkClient@114a85c2
2016-12-23 14:26:31,926 DEBUG [org.apache.zookeeper.ClientCnxn] - zookeeper.disableAutoWatchReset is false
2016-12-23 14:26:31,935 DEBUG [org.I0Itec.zkclient.ZkClient] - Awaiting connection to Zookeeper server
2016-12-23 14:26:31,936 INFO [org.I0Itec.zkclient.ZkClient] - Waiting for keeper state SyncConnected
2016-12-23 14:26:31,940 INFO [org.apache.zookeeper.ClientCnxn] - Opening socket connection to server 192.168.1.201/192.168.1.201:2181. Will not attempt to authenticate using SASL (unknown error)
2016-12-23 14:26:31,942 INFO [org.apache.zookeeper.ClientCnxn] - Socket connection established to 192.168.1.201/192.168.1.201:2181, initiating session
2016-12-23 14:26:31,943 DEBUG [org.apache.zookeeper.ClientCnxn] - Session establishment request sent on 192.168.1.201/192.168.1.201:2181
2016-12-23 14:26:31,951 WARN [org.apache.zookeeper.ClientCnxnSocket] - Connected to an old server; r-o mode will be unavailable
2016-12-23 14:26:31,951 INFO [org.apache.zookeeper.ClientCnxn] - Session establishment complete on server 192.168.1.201/192.168.1.201:2181, sessionid = 0x159256192b2001f, negotiated timeout = 40000
2016-12-23 14:26:31,953 DEBUG [org.I0Itec.zkclient.ZkClient] - Received event: WatchedEvent state:SyncConnected type:None path:null
2016-12-23 14:26:31,954 INFO [org.I0Itec.zkclient.ZkClient] - zookeeper state changed (SyncConnected)
2016-12-23 14:26:31,954 DEBUG [org.I0Itec.zkclient.ZkClient] - Leaving process event
2016-12-23 14:26:31,954 DEBUG [org.I0Itec.zkclient.ZkClient] - State is SyncConnected
2016-12-23 14:26:31,956 INFO [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] -  [DUBBO] Register: rest://192.168.1.184:9002/provider/com.jing.service.UserService?anyhost=true&application=test-provider&default.charset=UTF-8&default.retries=0&dubbo=2.8.4&generic=false&interface=com.jing.service.UserService&methods=getUser,saveUser&optimizer=com.jing.util.SerializationOptimizerImpl&organization=dubbox&owner=programmer&pid=64060&serialization=kryo&server=tomcat&side=provider&timestamp=1482474390991, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:26:31,967 DEBUG [org.apache.zookeeper.ClientCnxn] - Reading reply sessionid:0x159256192b2001f, packet:: clientPath:null serverPath:null finished:false header:: 1,1  replyHeader:: 1,1099,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2016-12-23 14:26:31,978 DEBUG [org.apache.zookeeper.ClientCnxn] - Reading reply sessionid:0x159256192b2001f, packet:: clientPath:null serverPath:null finished:false header:: 2,1  replyHeader:: 2,1100,-110  request:: '/dubbo/com.jing.service.UserService,,v{s{31,s{'world,'anyone}}},0  response::  
2016-12-23 14:26:31,981 DEBUG [org.apache.zookeeper.ClientCnxn] - Reading reply sessionid:0x159256192b2001f, packet:: clientPath:null serverPath:null finished:false header:: 3,1  replyHeader:: 3,1101,-110  request:: '/dubbo/com.jing.service.UserService/providers,,v{s{31,s{'world,'anyone}}},0  response::  
2016-12-23 14:26:31,985 DEBUG [org.apache.zookeeper.ClientCnxn] - Reading reply sessionid:0x159256192b2001f, packet:: clientPath:null serverPath:null finished:false header:: 4,1  replyHeader:: 4,1102,0  request:: '/dubbo/com.jing.service.UserService/providers/rest%253A%252F%252F192.168.1.184%253A9002%252Fprovider%252Fcom.jing.service.UserService%253Fanyhost%253Dtrue%2526application%253Dtest-provider%2526default.charset%253DUTF-8%2526default.retries%253D0%2526dubbo%253D2.8.4%2526generic%253Dfalse%2526interface%253Dcom.jing.service.UserService%2526methods%253DgetUser%252CsaveUser%2526optimizer%253Dcom.jing.util.SerializationOptimizerImpl%2526organization%253Ddubbox%2526owner%253Dprogrammer%2526pid%253D64060%2526serialization%253Dkryo%2526server%253Dtomcat%2526side%253Dprovider%2526timestamp%253D1482474390991,,v{s{31,s{'world,'anyone}}},1  response:: '/dubbo/com.jing.service.UserService/providers/rest%253A%252F%252F192.168.1.184%253A9002%252Fprovider%252Fcom.jing.service.UserService%253Fanyhost%253Dtrue%2526application%253Dtest-provider%2526default.charset%253DUTF-8%2526default.retries%253D0%2526dubbo%253D2.8.4%2526generic%253Dfalse%2526interface%253Dcom.jing.service.UserService%2526methods%253DgetUser%252CsaveUser%2526optimizer%253Dcom.jing.util.SerializationOptimizerImpl%2526organization%253Ddubbox%2526owner%253Dprogrammer%2526pid%253D64060%2526serialization%253Dkryo%2526server%253Dtomcat%2526side%253Dprovider%2526timestamp%253D1482474390991 
2016-12-23 14:26:31,987 INFO [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] -  [DUBBO] Subscribe: provider://192.168.1.184:9002/provider/com.jing.service.UserService?anyhost=true&application=test-provider&category=configurators&check=false&default.charset=UTF-8&default.retries=0&dubbo=2.8.4&generic=false&interface=com.jing.service.UserService&methods=getUser,saveUser&optimizer=com.jing.util.SerializationOptimizerImpl&organization=dubbox&owner=programmer&pid=64060&serialization=kryo&server=tomcat&side=provider&timestamp=1482474390991, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:26:31,995 DEBUG [org.apache.zookeeper.ClientCnxn] - Reading reply sessionid:0x159256192b2001f, packet:: clientPath:null serverPath:null finished:false header:: 5,1  replyHeader:: 5,1103,-110  request:: '/dubbo,,v{s{31,s{'world,'anyone}}},0  response::  
2016-12-23 14:26:31,997 DEBUG [org.apache.zookeeper.ClientCnxn] - Reading reply sessionid:0x159256192b2001f, packet:: clientPath:null serverPath:null finished:false header:: 6,1  replyHeader:: 6,1104,-110  request:: '/dubbo/com.jing.service.UserService,,v{s{31,s{'world,'anyone}}},0  response::  
2016-12-23 14:26:31,999 DEBUG [org.apache.zookeeper.ClientCnxn] - Reading reply sessionid:0x159256192b2001f, packet:: clientPath:null serverPath:null finished:false header:: 7,1  replyHeader:: 7,1105,-110  request:: '/dubbo/com.jing.service.UserService/configurators,,v{s{31,s{'world,'anyone}}},0  response::  
2016-12-23 14:26:32,005 DEBUG [org.apache.zookeeper.ClientCnxn] - Reading reply sessionid:0x159256192b2001f, packet:: clientPath:null serverPath:null finished:false header:: 8,3  replyHeader:: 8,1105,0  request:: '/dubbo/com.jing.service.UserService/configurators,T  response:: s{163,163,1482140982240,1482140982240,0,2,0,0,0,0,518} 
2016-12-23 14:26:32,008 DEBUG [org.apache.zookeeper.ClientCnxn] - Reading reply sessionid:0x159256192b2001f, packet:: clientPath:null serverPath:null finished:false header:: 9,8  replyHeader:: 9,1105,0  request:: '/dubbo/com.jing.service.UserService/configurators,T  response:: v{} 
2016-12-23 14:26:32,009 INFO [com.alibaba.dubbo.registry.zookeeper.ZookeeperRegistry] -  [DUBBO] Notify urls for subscribe url provider://192.168.1.184:9002/provider/com.jing.service.UserService?anyhost=true&application=test-provider&category=configurators&check=false&default.charset=UTF-8&default.retries=0&dubbo=2.8.4&generic=false&interface=com.jing.service.UserService&methods=getUser,saveUser&optimizer=com.jing.util.SerializationOptimizerImpl&organization=dubbox&owner=programmer&pid=64060&serialization=kryo&server=tomcat&side=provider&timestamp=1482474390991, urls: [empty://192.168.1.184:9002/provider/com.jing.service.UserService?anyhost=true&application=test-provider&category=configurators&check=false&default.charset=UTF-8&default.retries=0&dubbo=2.8.4&generic=false&interface=com.jing.service.UserService&methods=getUser,saveUser&optimizer=com.jing.util.SerializationOptimizerImpl&organization=dubbox&owner=programmer&pid=64060&serialization=kryo&server=tomcat&side=provider&timestamp=1482474390991], dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:26:32,015 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.RouterFactory {
public com.alibaba.dubbo.rpc.cluster.Router getRouter(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.RouterFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.RouterFactory extension = (com.alibaba.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:26:32,024 DEBUG [com.alibaba.dubbo.common.extension.ExtensionLoader] -  [DUBBO] package com.alibaba.dubbo.rpc.cluster;
import com.alibaba.dubbo.common.extension.ExtensionLoader;
public class ConfiguratorFactory$Adpative implements com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory {
public com.alibaba.dubbo.rpc.cluster.Configurator getConfigurator(com.alibaba.dubbo.common.URL arg0) {
if (arg0 == null) throw new IllegalArgumentException("url == null");
com.alibaba.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Fail to get extension(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory) name from url(" + url.toString() + ") use keys([protocol])");
com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory extension = (com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory)ExtensionLoader.getExtensionLoader(com.alibaba.dubbo.rpc.cluster.ConfiguratorFactory.class).getExtension(extName);
return extension.getConfigurator(arg0);
}
}, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:26:32,034 INFO [com.alibaba.dubbo.container.Main] -  [DUBBO] Dubbo SpringContainer started!, dubbo version: 2.8.4, current host: 127.0.0.1
2016-12-23 14:26:45,342 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 1ms
2016-12-23 14:26:58,675 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 1ms
2016-12-23 14:27:12,009 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 1ms
2016-12-23 14:27:25,344 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 1ms
2016-12-23 14:27:38,678 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 1ms
2016-12-23 14:27:52,011 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 1ms
2016-12-23 14:28:05,346 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 2ms
2016-12-23 14:28:18,678 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 0ms
2016-12-23 14:28:32,015 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 2ms
2016-12-23 14:28:45,347 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 1ms
2016-12-23 14:28:58,682 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 1ms
2016-12-23 14:29:12,015 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 0ms
2016-12-23 14:29:25,351 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 0ms
2016-12-23 14:29:38,686 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 2ms
2016-12-23 14:29:52,019 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 0ms
2016-12-23 14:30:05,353 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 1ms
2016-12-23 14:30:18,687 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 1ms
2016-12-23 14:30:32,021 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 1ms
2016-12-23 14:30:45,355 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 1ms
2016-12-23 14:30:58,688 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 0ms
2016-12-23 14:31:12,024 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 1ms
2016-12-23 14:31:25,358 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 0ms
2016-12-23 14:31:38,693 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 1ms
2016-12-23 14:31:52,029 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 3ms
2016-12-23 14:32:05,361 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 1ms
2016-12-23 14:32:18,695 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 1ms
2016-12-23 14:32:32,028 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 1ms
2016-12-23 14:32:45,362 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 1ms
2016-12-23 14:32:58,695 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 0ms
2016-12-23 14:33:12,031 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 1ms
2016-12-23 14:33:25,363 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 0ms
2016-12-23 14:33:38,699 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 1ms
2016-12-23 14:33:52,033 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 1ms
2016-12-23 14:34:05,367 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 1ms
2016-12-23 14:34:18,700 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 1ms
2016-12-23 14:34:32,033 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 0ms
2016-12-23 14:34:45,368 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 1ms
2016-12-23 14:34:58,702 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 1ms
2016-12-23 14:35:12,035 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 1ms
2016-12-23 14:35:25,368 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 0ms
2016-12-23 14:35:38,703 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 0ms
2016-12-23 14:35:52,038 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 1ms
2016-12-23 14:36:05,373 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 2ms
2016-12-23 14:36:18,705 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 1ms
2016-12-23 14:36:32,038 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 0ms
2016-12-23 14:36:45,374 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 1ms
2016-12-23 14:36:58,708 DEBUG [org.apache.zookeeper.ClientCnxn] - Got ping response for sessionid: 0x159256192b2001f after 1ms
